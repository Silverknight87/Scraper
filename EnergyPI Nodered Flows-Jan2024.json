[
    {
        "id": "9e45f8f5521cabe3",
        "type": "tab",
        "label": "Selec Energy meter Modbus main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cf729b4fc1f1e8be",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "80b458d147b4e3f6",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "83b7744472225dce",
        "type": "tab",
        "label": "PZEM Energy Modbus main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "704041ab.e9cd3",
        "type": "tab",
        "label": "Scraper amazon",
        "disabled": false,
        "info": ""
    },
    {
        "id": "463b5295a473e926",
        "type": "group",
        "z": "9e45f8f5521cabe3",
        "name": "Selec GRID EM4M",
        "style": {
            "label": true
        },
        "nodes": [
            "f0888d4c2fd22c9a",
            "52625ac474c835c5",
            "98fc909ae9784760",
            "a1875f244a7d12b9",
            "750f908c60b452d0",
            "e6090a192025840e",
            "3bfc1da1f161b6d8",
            "23628162d4815651",
            "c8e5015f714563b0",
            "6e667d25122707d8",
            "a7528fa295213e63",
            "bfb6e3ee4aa8ac59",
            "5525a89389fa2195",
            "d6561aedb830fd89",
            "60bf44db74f3f710",
            "1eff45b602062162",
            "1e628442bd71697e",
            "afc80e52a5f9d7d8",
            "302f528c6d9903a2",
            "aceeec27be905f3c",
            "15c275bb7966d431",
            "21417d1ca8571ab2",
            "6c1562ca33991b76",
            "58a195546bd08b77",
            "c1e0af3c6b17ecd7",
            "2fc1e93bfd6d9a88",
            "b628fde6acb12415",
            "4dd87b42ee76ae17",
            "845d3857a2023b0e",
            "9228e07995cdeaf5",
            "0a405fbed5a5a598",
            "618ee4cacf674f90",
            "8c2f86693eb51f9f",
            "d4e07863749be452"
        ],
        "x": 54,
        "y": 19,
        "w": 1372,
        "h": 942
    },
    {
        "id": "011e9280763ef782",
        "type": "group",
        "z": "9e45f8f5521cabe3",
        "name": "SELEC EV EM2M",
        "style": {
            "label": true
        },
        "nodes": [
            "f67b4de666827a9e",
            "d4ef7569847ea648",
            "aa9031927bd2ea1d",
            "c31121d2e7ec17a0",
            "72630b7e02d68f04",
            "c4c68875d199e512",
            "b49643581ac5b2e8",
            "5efb32c055c0d9c5",
            "8615a41285265a65",
            "29de10b874bb7044",
            "68d5488900def698",
            "cc657b92b52b4ec1"
        ],
        "x": 54,
        "y": 1059,
        "w": 1072,
        "h": 442
    },
    {
        "id": "6032fb792ab4e1c7",
        "type": "group",
        "z": "9e45f8f5521cabe3",
        "name": "Selec LOAD EM4M",
        "style": {
            "label": true
        },
        "nodes": [
            "85928fef9a8f687f",
            "fbf350e712256173",
            "72e4ac464b501551",
            "8899aa9c7041229d",
            "c77a8f79b0dcc7e7",
            "62e8794bd6d79082",
            "8a7605cda2039d97",
            "59d1e905dde85d44",
            "cd727ebaee24c5d2",
            "c1bc8d7082e07620",
            "f88fe0900e6c07a8",
            "5c08c6dce4961bf4",
            "c05f65a78afa59f7",
            "44432a7f4b582219",
            "13d1ca543f880e25",
            "de72cea17b2218e9",
            "627f688b02d31aae",
            "2b98fc532738233b",
            "4f39ce117fc54a8e",
            "6f6f46639ac741bc",
            "8ee283f3fc59a387",
            "af655d2fb4f2b442",
            "321c0395dabc1043",
            "d56eaf88c28819e8"
        ],
        "x": 54,
        "y": 1579,
        "w": 1132,
        "h": 942
    },
    {
        "id": "15bd4c5881ea193d",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Nivea body mil 600ml",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "6207021b7e2694d2",
            "20cd850255cf683d",
            "5b3fc6b2abc132a3",
            "5a9e6c236734a1f2",
            "1fc895d392ad6c9b",
            "85f6c10526239111",
            "4ff34faf67c64cc8",
            "0e0f1c44b2b6dd57",
            "00ea7cecda3cd0ab"
        ],
        "x": 74,
        "y": 2699,
        "w": 1272,
        "h": 182
    },
    {
        "id": "19017f80fe8eed6e",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Himalaya neem",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "cd4bcfee8ec78866",
            "9a1709b9ef33996b",
            "d6d13a02640c4c01",
            "88c042e105b99cbc",
            "02180fc709680ddb",
            "760eb7c556e9d24f",
            "e5defacb51914e8e",
            "288eb5b522997d37",
            "df5ce71067c30168"
        ],
        "x": 74,
        "y": 2499,
        "w": 1272,
        "h": 182
    },
    {
        "id": "1d9dc60a.89eaea",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Amazon basics toslink",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "e3d9897f.313f48",
            "fa4f42b0.b6a07",
            "3cc51a4b.6af5c6",
            "c3e1122a.4219d",
            "ceffda2d.85dcb8",
            "26802c0078047516",
            "1d1e07fe5d686f58"
        ],
        "x": 34,
        "y": 819,
        "w": 1252,
        "h": 182
    },
    {
        "id": "25bccfb620fd68fd",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Listerine",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "85f7ceca71381ab6",
            "f068cd7a63f3a556",
            "bc0f4bf3e561f4b1",
            "52860de41a302f74",
            "6864a936fbe95765",
            "4241556f73b496df",
            "d21aec6cfe859b6a",
            "1dd9c8e102272d63",
            "cb7589feec8acaf2"
        ],
        "x": 54,
        "y": 259,
        "w": 1152,
        "h": 182
    },
    {
        "id": "2bb1f5b7b32a4709",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Amazon basics safe",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "c0ad1bd1aaaa9c36",
            "692edbf11cfd5327",
            "ac17b7ed875546fd",
            "3d19f53128b8286f",
            "86400455fd644360",
            "8679f5f3a819f148",
            "d24bd639e1990f66",
            "8bcf78f34a03c2ee",
            "271a2b4e4079eb3a"
        ],
        "x": 14,
        "y": 19,
        "w": 1232,
        "h": 182
    },
    {
        "id": "55a03d92dab54f02",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Pampers xl",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "5b199cd6f3417654",
            "bebbb120b4d6cff2",
            "870569c08767ccab",
            "5fbea85af6cd4510",
            "a3d052dd091d84cb",
            "960dd526a725e2ae",
            "6587cc5bb60d2489",
            "52998d11f676e2aa"
        ],
        "x": 34,
        "y": 1039,
        "w": 1172,
        "h": 202
    },
    {
        "id": "7bdac3a653878839",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Amazon basics safe",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "eb1bc7940c5bd06f",
            "925909afc83a02cf",
            "cab3937fc1996d63",
            "595834b7d0b53e7c",
            "dbe3dabc183eb7ac",
            "abec36ecbdb7194f",
            "2a5208cb63f95bd8",
            "70c6723d2ff013ff"
        ],
        "x": 54,
        "y": 1899,
        "w": 1252,
        "h": 182
    },
    {
        "id": "8daadbffb3b253b3",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Durex",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "c117fa18e6d629de",
            "b5bab246749b10eb",
            "0d01312a0fab58a4",
            "f598d14124433188",
            "221ee6849ffe0b03",
            "95a5796cdd8a660b",
            "a8ac6089a7def170",
            "94a1cba28292b35a"
        ],
        "x": 54,
        "y": 1699,
        "w": 1272,
        "h": 182
    },
    {
        "id": "969e91d0.12682",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Motul xcess 8100",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "ced0be91.03be",
            "8add58a8.ca66c8",
            "e1138d4a.5b7f1",
            "998521a3.d3759",
            "cdcb24c5.bc4298",
            "1d4de573ce597cc8",
            "91dec00366d08213",
            "7212dbeaa8a94df6",
            "9823aaa869d43745"
        ],
        "x": 14,
        "y": 659,
        "w": 1172,
        "h": 182
    },
    {
        "id": "974c830c450e17d7",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Solimo kadhai induction",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "5da6b7f81d0d20ab",
            "d279897a61d75922",
            "acea76d72af8cb29",
            "83f9e419d4b8e53a",
            "3653e424e208c0bd",
            "610128f7b9adf92b",
            "0e8d4dd4f12c93c1",
            "e91ed949932f5d0d"
        ],
        "x": 34,
        "y": 3099,
        "w": 1312,
        "h": 182
    },
    {
        "id": "9d89888844cf6478",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Cellcronic Axpert king II",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "44f2f7801c54906b",
            "e0acbeb3e1b35bf9",
            "3489d1b4ec012562",
            "3638372b514e2d36",
            "0fd235c9ec8a5b7a",
            "f446a55246ca9fd2",
            "e12b52dbe1d429f8",
            "7b65f75bb150341e"
        ],
        "x": 54,
        "y": 1279,
        "w": 1192,
        "h": 182
    },
    {
        "id": "ba35aaa0d8db98fb",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Amazon basics safe",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "1279b4354b016fae",
            "e43b8d27eeafd66a",
            "12fd9dc2629587b4",
            "392c04efb19a273e",
            "d1f99a834b3d3b9d",
            "677c1a8472d1de94",
            "3529972e3960826f",
            "1fc34a3704bdde8e"
        ],
        "x": 54,
        "y": 479,
        "w": 1192,
        "h": 182
    },
    {
        "id": "c5f1046ee557c975",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "non stick pan amazonbasics24",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "b615dcf6a4f2f038",
            "c0dc6560e513fc66",
            "8d559a0afff77df5",
            "e1dcce6e196ef686",
            "c71c430e29551379",
            "af974d363218ed23",
            "31e521d2d08e01e0",
            "97774660a766f623"
        ],
        "x": 14,
        "y": 2919,
        "w": 1272,
        "h": 182
    },
    {
        "id": "c7139aaff85b5fba",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Protium ir blaster",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "be386686d39a490d",
            "b26d838bfdf61d7a",
            "805d4f73eee1d589",
            "35795851b22ef049",
            "ccaf6e399eadf531",
            "18c459d8f7b1b6bd",
            "34a771e9252d1933",
            "1d133d2e63b1732d"
        ],
        "x": 54,
        "y": 3439,
        "w": 1252,
        "h": 182
    },
    {
        "id": "d120ad6f3aadb503",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "amzn wok",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "2c1751e11e6ce202",
            "2ad8d5eb96335983",
            "aefb477cfa9b0773",
            "f6aa1376499441ed",
            "cc6dae17a7d6acae",
            "0dabad5b48c9aade",
            "6c57a264e11443f4",
            "71254e4548a1d5fb"
        ],
        "x": 94,
        "y": 3679,
        "w": 1252,
        "h": 202
    },
    {
        "id": "e5152208272e57e7",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Omron 7120",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "1319945ff74a26bc",
            "be218b96088474b4",
            "3ea02ae4fdaf7e7f",
            "900153f4543314cc",
            "ab6f9a360f37a721",
            "9f32e0a941aaf9f1",
            "8f62b7dd1758fc0e"
        ],
        "x": 34,
        "y": 2239,
        "w": 1252,
        "h": 182
    },
    {
        "id": "e79477378724c857",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "Boldfit n95",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "0a21a2b096484a53",
            "c57fe439ea4e6501",
            "3b333c3a6aa2c1a7",
            "9f25a507d1ebcec2",
            "4b1994e9c4494d0f",
            "5899d279e63610df",
            "bb59a4c417616f63",
            "fa062b7a66b9be49",
            "1171911afaea9088"
        ],
        "x": 54,
        "y": 1479,
        "w": 1232,
        "h": 202
    },
    {
        "id": "2eb8719b39ddd0c0",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "amzn wok",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "7d509f36a7c36e79",
            "563677414f14fd7f",
            "c1aefb88058b842a",
            "9b811e569ac4fdea",
            "c86fce5435892682",
            "aa565451958e6ada",
            "34080140c54cde7e",
            "9448b7a1698b7d6c",
            "08808f61ba3666fd"
        ],
        "x": 54,
        "y": 3999,
        "w": 1272,
        "h": 202
    },
    {
        "id": "e83a1cb9517a0cc7",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "amzn wok",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "238ff4bfe6ad1bae",
            "4496bc64cb04ea24",
            "a06ac11fe38921e5",
            "b74f68908a698a70",
            "5558e8607e20321a",
            "164c3f8a5f0abe7e",
            "220f99cf9c051d19",
            "9e989feccce47a63",
            "a2e3764f6f82e574"
        ],
        "x": 54,
        "y": 4259,
        "w": 1252,
        "h": 202
    },
    {
        "id": "6ca20a30cf77ebfd",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "amzn basics AA battery",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "1ea5e8247be88fb5",
            "ae8986d62d341043",
            "228f03e94449e553",
            "9c133e15fe2d6bd9",
            "619b51ec07b7e88d",
            "9506da705688622e",
            "5ffc50f2ed65e098",
            "594f932fdfde82a7",
            "bd1cd5b0636d55e2"
        ],
        "x": 74,
        "y": 4939,
        "w": 1272,
        "h": 202
    },
    {
        "id": "bda21744f6498753",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "amzn basic AAA",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "83eabbe446eff77f",
            "ee6eb461e7906a3f",
            "4527340724b3b783",
            "7e89821a74d8fe8c",
            "b72ba9660af084e8",
            "8056f33e1110ef9b",
            "5a83d1c969471d14",
            "3ecb2674199ebf95",
            "0956ec411c89500e"
        ],
        "x": 74,
        "y": 5179,
        "w": 1232,
        "h": 202
    },
    {
        "id": "b8cb59fd77bcbf31",
        "type": "group",
        "z": "704041ab.e9cd3",
        "name": "amzn wok",
        "style": {
            "label": true,
            "fill": "#e3f3d3"
        },
        "nodes": [
            "2d0c8c0159b5e483",
            "913a44daa1034e2e",
            "950b145f153c4140",
            "672c8591cfc02890",
            "c3c3c5bc07c9818e",
            "3d4691eadb7677cc",
            "6dbc9e377d373c2d",
            "fd012b207d083414",
            "2a665c63c17097d8"
        ],
        "x": 54,
        "y": 4519,
        "w": 1252,
        "h": 202
    },
    {
        "id": "491a1f29df6d8950",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.111.92",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "dfba0e011b69d5c7",
        "type": "modbus-client",
        "name": "USB0",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 1,
        "clientTimeout": 1000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 2000,
        "parallelUnitIdsAllowed": false
    },
    {
        "id": "31f12f57b6661663",
        "type": "modbus-client",
        "name": "usb00",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "19200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "3",
        "commandDelay": "1",
        "clientTimeout": "2000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "5000",
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "3600bfef9904db65",
        "type": "modbus-client",
        "name": "ttyUSB0",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": false,
        "queueLogEnabled": false,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "9600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": 1,
        "commandDelay": 30,
        "clientTimeout": 2000,
        "reconnectOnTimeout": true,
        "reconnectTimeout": 5000,
        "parallelUnitIdsAllowed": true
    },
    {
        "id": "3c82dcf94414b0be",
        "type": "mqtt-broker",
        "name": "mqtt.home",
        "broker": "192.168.111.98",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "ba386057.845d3",
        "type": "mqtt-broker",
        "broker": "localhost",
        "port": "1883"
    },
    {
        "id": "7e51be116b0c32bd",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.111.98",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "18a3f70cd4e39396",
        "type": "mqtt-broker",
        "name": "mqtt.home",
        "broker": "mqtt.home",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "c13ec768bcc1f442",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "ha10",
        "usetls": false,
        "tls": "ae2c7c3a.6a704",
        "influxdbVersion": "2.0",
        "url": "http://192.168.111.98:8086",
        "timeout": "",
        "rejectUnauthorized": false
    },
    {
        "id": "ae2c7c3a.6a704",
        "type": "tls-config",
        "d": true,
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "ca943194b29f3a84",
        "type": "telegram bot",
        "botname": "amzm2_bot",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "f0888d4c2fd22c9a",
        "type": "modbus-flex-getter",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "dfba0e011b69d5c7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 430,
        "y": 400,
        "wires": [
            [
                "52625ac474c835c5",
                "98fc909ae9784760",
                "a1875f244a7d12b9",
                "750f908c60b452d0",
                "e6090a192025840e",
                "3bfc1da1f161b6d8",
                "23628162d4815651",
                "c8e5015f714563b0",
                "6e667d25122707d8",
                "a7528fa295213e63",
                "bfb6e3ee4aa8ac59",
                "5525a89389fa2195",
                "d6561aedb830fd89",
                "60bf44db74f3f710",
                "1eff45b602062162"
            ],
            []
        ]
    },
    {
        "id": "52625ac474c835c5",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Voltage1",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1];\n\n//low\nintView[1] = msg.payload[0];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"voltage1\"\n\n// node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 60,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "98fc909ae9784760",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Voltage2",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[3];\n\n//low\nintView[1] = msg.payload[2];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"voltage2\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 120,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "a1875f244a7d12b9",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Voltage3",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[5];\n\n//low\nintView[1] = msg.payload[4];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"voltage3\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 180,
        "wires": [
            [
                "302f528c6d9903a2",
                "58a195546bd08b77",
                "c1e0af3c6b17ecd7"
            ]
        ]
    },
    {
        "id": "750f908c60b452d0",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Current1",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[17];\n\n//low\nintView[1] = msg.payload[16];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"current1\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 240,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "e6090a192025840e",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Current2",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[19];\n\n//low\nintView[1] = msg.payload[18];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"current2\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 300,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "3bfc1da1f161b6d8",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Current3",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[21];\n\n//low\nintView[1] = msg.payload[20];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"current3\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 360,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "23628162d4815651",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Watts1",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[25];\n\n//low\nintView[1] = msg.payload[24];\n\n//high\nparseFloat((fltView[0] * 1000).toFixed(2));\n\nmsg.payload = parseFloat((fltView[0] * 1000).toFixed(2));\n\nmsg.topic = \"Watts1\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 440,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "c8e5015f714563b0",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Watts2",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[27];\n\n//low\nintView[1] = msg.payload[26];\n\n//high\n\nmsg.payload = parseFloat((fltView[0] * 1000).toFixed(2));\n\nmsg.topic = \"Watts2\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 500,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "6e667d25122707d8",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Watts3",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[29];\n\n//low\nintView[1] = msg.payload[28];\n\n//high\n\nmsg.payload =  parseFloat((fltView[0] * 1000).toFixed(2));\n\nmsg.topic = \"Watts3\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 560,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "a7528fa295213e63",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Total KW",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[43];\n\n//low\nintView[1] = msg.payload[42];\n\n//high\n\nmsg.payload = parseFloat((fltView[0] * 1000).toFixed(2));\n\nmsg.topic = \"TotalWatts\"\n\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 620,
        "wires": [
            [
                "302f528c6d9903a2",
                "8c2f86693eb51f9f",
                "d4e07863749be452"
            ]
        ]
    },
    {
        "id": "bfb6e3ee4aa8ac59",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Total net KWH",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[59];\n\n//low\nintView[1] = msg.payload[58];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"TotalNetkWh\"\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 680,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "5525a89389fa2195",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Max demand",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[71];\n\n//low\nintView[1] = msg.payload[70];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"MaxDMD\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 740,
        "wires": [
            [
                "302f528c6d9903a2",
                "aceeec27be905f3c"
            ]
        ]
    },
    {
        "id": "d6561aedb830fd89",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Total KWH - Import",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[89];\n\n//low\nintView[1] = msg.payload[88];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1)) + 2133; // l&t meter vs selec meter offset\n\nmsg.topic = \"TotalkWhImport\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 800,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "60bf44db74f3f710",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Total KWH - Export",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[91];\n\n//low\nintView[1] = msg.payload[90];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1)) + 3254.5;  // l&t meter vs selec meter offset;\n\nmsg.topic = \"TotalkWhExport\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 860,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "1eff45b602062162",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Frequency",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[57];\n\n//low\nintView[1] = msg.payload[56];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"frequency\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 920,
        "wires": [
            [
                "302f528c6d9903a2"
            ]
        ]
    },
    {
        "id": "1e628442bd71697e",
        "type": "inject",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "EM4M- GRID Meter",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "{\"value\":0,\"fc\":4, \"unitid\":1, \"address\":0,\"quantity\":94}",
        "payloadType": "json",
        "x": 200,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "afc80e52a5f9d7d8",
        "type": "debug",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 380,
        "wires": []
    },
    {
        "id": "302f528c6d9903a2",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Build object",
        "func": "watch_topic = \"TotalNetkWh\";\nvar output = {};\n\ncontext.set(msg.topic,msg.payload);\n\nif (context.get(\"voltage1\")!==undefined) {\n    output.voltage1 = context.get(\"voltage1\");\n}\nif (context.get(\"voltage2\")!==undefined) {\n    output.voltage2 = context.get(\"voltage2\");\n}\nif (context.get(\"voltage3\")!==undefined) {\n    output.voltage3 = context.get(\"voltage3\");\n}\n\nif (context.get(\"current1\")!==undefined) {\n    output.current1 = context.get(\"current1\");\n}\nif (context.get(\"current2\")!==undefined) {\n    output.current2 = context.get(\"current2\");\n}\nif (context.get(\"current3\")!==undefined) {\n    output.current3 = context.get(\"current3\");\n}\n\nif (context.get(\"Watts1\")!==undefined) {\n    output.KW1 = context.get(\"Watts1\");\n}\n\nif (context.get(\"Watts2\")!==undefined) {\n    output.KW2 = context.get(\"Watts2\");\n}\nif (context.get(\"Watts3\")!==undefined) {\n    output.KW3 = context.get(\"Watts3\");\n}\nif (context.get(\"TotalWatts\")!==undefined) {\n    output.TotalkW = context.get(\"TotalWatts\");\n}\n\n\nif (context.get(\"frequency\")!==undefined) {\n    output.frequency = context.get(\"frequency\");\n}\n\n\nif (context.get(\"TotalNetkWh\")!==undefined) {\n    output.TotalNetkWh = context.get(\"TotalNetkWh\");\n}\n\nif (context.get(\"MaxDMD\")!==undefined) {\n    output.MaxDMD = context.get(\"MaxDMD\");\n}\n\nif (context.get(\"TotalkWhImport\")!==undefined) {\n    output.TotalkWhImport = context.get(\"TotalkWhImport\");\n}\n\nif (context.get(\"TotalkWhExport\")!==undefined) {\n    output.TotalkWhExport = context.get(\"TotalkWhExport\");\n}\n\nmsg.payload = output;\n\nif (msg.topic===watch_topic) {\n    msg.topic = \"SelecEM4MGRID\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 380,
        "wires": [
            [
                "afc80e52a5f9d7d8",
                "15c275bb7966d431"
            ]
        ]
    },
    {
        "id": "aceeec27be905f3c",
        "type": "debug",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 680,
        "wires": []
    },
    {
        "id": "15c275bb7966d431",
        "type": "mqtt out",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "selec HA10 MQTT",
        "topic": "pi/selec",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c82dcf94414b0be",
        "x": 1070,
        "y": 440,
        "wires": []
    },
    {
        "id": "21417d1ca8571ab2",
        "type": "inject",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "15",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 280,
        "wires": [
            [
                "6c1562ca33991b76"
            ]
        ]
    },
    {
        "id": "6c1562ca33991b76",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "",
        "func": "msg.payload = { value: msg.payload, 'fc': 4, 'unitid': 1, 'address': 0, 'quantity': 95 };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 300,
        "wires": [
            [
                "f0888d4c2fd22c9a"
            ]
        ]
    },
    {
        "id": "f67b4de666827a9e",
        "type": "modbus-flex-getter",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "dfba0e011b69d5c7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 330,
        "y": 1280,
        "wires": [
            [
                "aa9031927bd2ea1d",
                "c31121d2e7ec17a0",
                "72630b7e02d68f04",
                "c4c68875d199e512",
                "b49643581ac5b2e8",
                "5efb32c055c0d9c5",
                "29de10b874bb7044"
            ],
            []
        ]
    },
    {
        "id": "d4ef7569847ea648",
        "type": "inject",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "EM2M",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{\"value\":0,\"fc\":4, \"unitid\":2, \"address\":0,\"quantity\":36}",
        "payloadType": "json",
        "x": 160,
        "y": 1280,
        "wires": [
            [
                "f67b4de666827a9e"
            ]
        ]
    },
    {
        "id": "aa9031927bd2ea1d",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "Voltage",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[22];\n\n//low\nintView[1] = msg.payload[21];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"voltage\"\n\n// node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1100,
        "wires": [
            [
                "8615a41285265a65"
            ]
        ]
    },
    {
        "id": "c31121d2e7ec17a0",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "Current",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[24];\n\n//low\nintView[1] = msg.payload[23];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"current\"\n\n// node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1160,
        "wires": [
            [
                "8615a41285265a65"
            ]
        ]
    },
    {
        "id": "72630b7e02d68f04",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "PF",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[26];\n\n//low\nintView[1] = msg.payload[25];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"pf\"\n\n// node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1220,
        "wires": [
            [
                "8615a41285265a65"
            ]
        ]
    },
    {
        "id": "c4c68875d199e512",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "Max demand",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[30];\n\n//low\nintView[1] = msg.payload[29];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"maxdemand\"\n\n// node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1280,
        "wires": [
            [
                "8615a41285265a65"
            ]
        ]
    },
    {
        "id": "b49643581ac5b2e8",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "Power",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[16];\n\n//low\nintView[1] = msg.payload[15];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"power\"\n\n// node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1340,
        "wires": [
            [
                "8615a41285265a65"
            ]
        ]
    },
    {
        "id": "5efb32c055c0d9c5",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "kWh",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[2];\n\n//low\nintView[1] = msg.payload[1];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"kWh\"\n\n// node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1400,
        "wires": [
            [
                "8615a41285265a65"
            ]
        ]
    },
    {
        "id": "8615a41285265a65",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "function 1",
        "func": "var watch_topic = \"kWh\";\nvar output = {};\n\ncontext.set(msg.topic, msg.payload);\n\nif (context.get(\"voltage\") !== undefined) {\n    output.voltage = context.get(\"voltage\");\n}\nif (context.get(\"current\") !== undefined) {\n    output.current = context.get(\"current\");\n}\nif (context.get(\"pf\") !== undefined) {\n    output.pf = context.get(\"pf\");\n}\nif (context.get(\"maxdemand\") !== undefined) {\n    output.maxdemand = context.get(\"maxdemand\");\n}\nif (context.get(\"power\") !== undefined) {\n    output.power = context.get(\"power\");\n}\nif (context.get(\"freq\") !== undefined) {\n    output.freq = context.get(\"freq\");\n}\nif (context.get(\"kWh\") !== undefined) {\n    output.kWh = context.get(\"kWh\");\n}\n\nmsg.payload = output;\n\nif (msg.topic === watch_topic) {\n    msg.topic = \"SelecEM2M\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1260,
        "wires": [
            [
                "68d5488900def698",
                "cc657b92b52b4ec1"
            ]
        ]
    },
    {
        "id": "29de10b874bb7044",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "freq",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[28];\n\n//low\nintView[1] = msg.payload[27];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"freq\"\n\n// node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1460,
        "wires": [
            [
                "8615a41285265a65"
            ]
        ]
    },
    {
        "id": "68d5488900def698",
        "type": "debug",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 1260,
        "wires": []
    },
    {
        "id": "cc657b92b52b4ec1",
        "type": "mqtt out",
        "z": "9e45f8f5521cabe3",
        "g": "011e9280763ef782",
        "name": "EM2M MQTT",
        "topic": "pi/selecEV",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 920,
        "y": 1340,
        "wires": []
    },
    {
        "id": "85928fef9a8f687f",
        "type": "modbus-flex-getter",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "",
        "showStatusActivities": false,
        "showErrors": false,
        "logIOActivities": false,
        "server": "dfba0e011b69d5c7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "x": 430,
        "y": 1960,
        "wires": [
            [
                "fbf350e712256173",
                "72e4ac464b501551",
                "8899aa9c7041229d",
                "c77a8f79b0dcc7e7",
                "62e8794bd6d79082",
                "8a7605cda2039d97",
                "59d1e905dde85d44",
                "cd727ebaee24c5d2",
                "c1bc8d7082e07620",
                "f88fe0900e6c07a8",
                "5c08c6dce4961bf4",
                "c05f65a78afa59f7",
                "44432a7f4b582219",
                "13d1ca543f880e25",
                "de72cea17b2218e9"
            ],
            []
        ]
    },
    {
        "id": "fbf350e712256173",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Voltage1",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[0];\n\n//low\nintView[1] = msg.payload[1];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"voltage1\"\n\n// node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1620,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "72e4ac464b501551",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Voltage2",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[2];\n\n//low\nintView[1] = msg.payload[3];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"voltage2\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1680,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "8899aa9c7041229d",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Voltage3",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[4];\n\n//low\nintView[1] = msg.payload[5];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"voltage3\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1740,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "c77a8f79b0dcc7e7",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Current1",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[16];\n\n//low\nintView[1] = msg.payload[17];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"current1\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1800,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "62e8794bd6d79082",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Current2",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[18];\n\n//low\nintView[1] = msg.payload[19];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"current2\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1860,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "8a7605cda2039d97",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Current3",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[20];\n\n//low\nintView[1] = msg.payload[21];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"current3\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1920,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "59d1e905dde85d44",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Watts1",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[24];\n\n//low\nintView[1] = msg.payload[25];\n\n//high\nparseFloat((fltView[0] * 1000).toFixed(2));\n\nmsg.payload = parseFloat((fltView[0] * 1000).toFixed(2));\n\nmsg.topic = \"Watts1\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2000,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "cd727ebaee24c5d2",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Watts2",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[26];\n\n//low\nintView[1] = msg.payload[27];\n\n//high\n\nmsg.payload = parseFloat((fltView[0] * 1000).toFixed(2));\n\nmsg.topic = \"Watts2\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2060,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "c1bc8d7082e07620",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Watts3",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[28];\n\n//low\nintView[1] = msg.payload[29];\n\n//high\n\nmsg.payload =  parseFloat((fltView[0] * 1000).toFixed(2));\n\nmsg.topic = \"Watts3\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2120,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "f88fe0900e6c07a8",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Total KW",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[42];\n\n//low\nintView[1] = msg.payload[43];\n\n//high\n\nmsg.payload = parseFloat((fltView[0] * 1000).toFixed(2));\n\nmsg.topic = \"TotalWatts\"\n\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2180,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "5c08c6dce4961bf4",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Total net KWH",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[58];\n\n//low\nintView[1] = msg.payload[59];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"TotalNetkWh\"\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 2240,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "c05f65a78afa59f7",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Max demand",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[70];\n\n//low\nintView[1] = msg.payload[71];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"MaxDMD\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2300,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "44432a7f4b582219",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Total KWH - Import",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[88];\n\n//low\nintView[1] = msg.payload[89];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1)); // l&t meter vs selec meter offset\n\nmsg.topic = \"TotalkWhImport\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2360,
        "wires": [
            [
                "6f6f46639ac741bc",
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "13d1ca543f880e25",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Total KWH - Export",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[90];\n\n//low\nintView[1] = msg.payload[91];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));  // l&t meter vs selec meter offset;\n\nmsg.topic = \"TotalkWhExport\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2420,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "de72cea17b2218e9",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Frequency",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[56];\n\n//low\nintView[1] = msg.payload[57];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"frequency\"\n\n\n//node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 2480,
        "wires": [
            [
                "4f39ce117fc54a8e"
            ]
        ]
    },
    {
        "id": "627f688b02d31aae",
        "type": "inject",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "EM4M- GRID Meter",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "{\"value\":0,\"fc\":4, \"unitid\":1, \"address\":0,\"quantity\":94}",
        "payloadType": "json",
        "x": 200,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "2b98fc532738233b",
        "type": "debug",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 1920,
        "wires": []
    },
    {
        "id": "4f39ce117fc54a8e",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "Build object",
        "func": "var watch_topic = \"TotalNetkWh\";\nvar output = {};\n\ncontext.set(msg.topic,msg.payload);\n\nif (context.get(\"voltage1\")!==undefined) {\n    output.voltage1 = context.get(\"voltage1\");\n}\nif (context.get(\"voltage2\")!==undefined) {\n    output.voltage2 = context.get(\"voltage2\");\n}\nif (context.get(\"voltage3\")!==undefined) {\n    output.voltage3 = context.get(\"voltage3\");\n}\n\nif (context.get(\"current1\")!==undefined) {\n    output.current1 = context.get(\"current1\");\n}\nif (context.get(\"current2\")!==undefined) {\n    output.current2 = context.get(\"current2\");\n}\nif (context.get(\"current3\")!==undefined) {\n    output.current3 = context.get(\"current3\");\n}\n\nif (context.get(\"Watts1\")!==undefined) {\n    output.KW1 = context.get(\"Watts1\");\n}\n\nif (context.get(\"Watts2\")!==undefined) {\n    output.KW2 = context.get(\"Watts2\");\n}\nif (context.get(\"Watts3\")!==undefined) {\n    output.KW3 = context.get(\"Watts3\");\n}\nif (context.get(\"TotalWatts\")!==undefined) {\n    output.TotalkW = context.get(\"TotalWatts\");\n}\n\n\nif (context.get(\"frequency\")!==undefined) {\n    output.frequency = context.get(\"frequency\");\n}\n\n\nif (context.get(\"TotalNetkWh\")!==undefined) {\n    output.TotalNetkWh = context.get(\"TotalNetkWh\");\n}\n\nif (context.get(\"MaxDMD\")!==undefined) {\n    output.MaxDMD = context.get(\"MaxDMD\");\n}\n\nif (context.get(\"TotalkWhImport\")!==undefined) {\n    output.TotalkWhImport = context.get(\"TotalkWhImport\");\n}\n\nif (context.get(\"TotalkWhExport\")!==undefined) {\n    output.TotalkWhExport = context.get(\"TotalkWhExport\");\n}\n\nmsg.payload = output;\n\nif (msg.topic===watch_topic) {\n    msg.topic = \"SelecEM4M-LOAD\";\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1940,
        "wires": [
            [
                "2b98fc532738233b",
                "8ee283f3fc59a387"
            ]
        ]
    },
    {
        "id": "6f6f46639ac741bc",
        "type": "debug",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 2240,
        "wires": []
    },
    {
        "id": "8ee283f3fc59a387",
        "type": "mqtt out",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "selec HA10 MQTT",
        "topic": "pi/selecLOAD",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1070,
        "y": 2000,
        "wires": []
    },
    {
        "id": "af655d2fb4f2b442",
        "type": "inject",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "EM4M Load ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "12",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1840,
        "wires": [
            [
                "321c0395dabc1043"
            ]
        ]
    },
    {
        "id": "321c0395dabc1043",
        "type": "function",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "",
        "func": "msg.payload = { value: msg.payload, 'fc': 4, 'unitid': 3, 'address': 0, 'quantity': 95 };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1860,
        "wires": [
            [
                "85928fef9a8f687f"
            ]
        ]
    },
    {
        "id": "d56eaf88c28819e8",
        "type": "comment",
        "z": "9e45f8f5521cabe3",
        "g": "6032fb792ab4e1c7",
        "name": "",
        "info": "This meter uses Little endian instead of big endian like the other newer version selec meter.\n\nSo the order is low byte first and then the higher byte within the code to parse.",
        "x": 320,
        "y": 1700,
        "wires": []
    },
    {
        "id": "58a195546bd08b77",
        "type": "debug",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 180,
        "wires": []
    },
    {
        "id": "c1e0af3c6b17ecd7",
        "type": "mqtt out",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "selec HA10 MQTT",
        "topic": "pi/selec/voltage3",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c82dcf94414b0be",
        "x": 950,
        "y": 260,
        "wires": []
    },
    {
        "id": "2fc1e93bfd6d9a88",
        "type": "trigger",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Watchdog Phase 1",
        "op1": "",
        "op2": "Powercut on Phase 1",
        "op1type": "nul",
        "op2type": "str",
        "duration": "35",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 870,
        "y": 60,
        "wires": [
            [
                "b628fde6acb12415",
                "0a405fbed5a5a598"
            ]
        ]
    },
    {
        "id": "b628fde6acb12415",
        "type": "debug",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1150,
        "y": 60,
        "wires": []
    },
    {
        "id": "4dd87b42ee76ae17",
        "type": "trigger",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Watchdog Phase 2",
        "op1": "",
        "op2": "Powercut on Phase 2",
        "op1type": "nul",
        "op2type": "str",
        "duration": "35",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 870,
        "y": 100,
        "wires": [
            [
                "0a405fbed5a5a598",
                "b628fde6acb12415"
            ]
        ]
    },
    {
        "id": "845d3857a2023b0e",
        "type": "trigger",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Watchdog Phase 3",
        "op1": "",
        "op2": "Powercut on Phase 3",
        "op1type": "nul",
        "op2type": "str",
        "duration": "35",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 870,
        "y": 140,
        "wires": [
            [
                "0a405fbed5a5a598",
                "b628fde6acb12415"
            ]
        ]
    },
    {
        "id": "9228e07995cdeaf5",
        "type": "mqtt out",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Powercut watchdog",
        "topic": "pi/selecpowercut",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1310,
        "y": 100,
        "wires": []
    },
    {
        "id": "0a405fbed5a5a598",
        "type": "join",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "5",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "9228e07995cdeaf5",
                "618ee4cacf674f90"
            ]
        ]
    },
    {
        "id": "618ee4cacf674f90",
        "type": "debug",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 160,
        "wires": []
    },
    {
        "id": "8c2f86693eb51f9f",
        "type": "debug",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 580,
        "wires": []
    },
    {
        "id": "d4e07863749be452",
        "type": "mqtt out",
        "z": "9e45f8f5521cabe3",
        "g": "463b5295a473e926",
        "name": "Selec grid power total for openevse shaper",
        "topic": "pi/selec/totalpower",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c82dcf94414b0be",
        "x": 990,
        "y": 620,
        "wires": []
    },
    {
        "id": "93679970956b3f53",
        "type": "rpi-gpio in",
        "z": "cf729b4fc1f1e8be",
        "name": "",
        "pin": "21",
        "intype": "up",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 180,
        "y": 200,
        "wires": [
            [
                "97229ea1fe1bd6de"
            ]
        ]
    },
    {
        "id": "97229ea1fe1bd6de",
        "type": "debug",
        "z": "cf729b4fc1f1e8be",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 200,
        "wires": []
    },
    {
        "id": "9f418dab729e9cfc",
        "type": "mqtt in",
        "z": "cf729b4fc1f1e8be",
        "name": "",
        "topic": "pi/selec/payload.TotalkW",
        "qos": "2",
        "datatype": "auto",
        "broker": "7e51be116b0c32bd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 340,
        "wires": [
            [
                "c07373ed0359dbe6"
            ]
        ]
    },
    {
        "id": "c07373ed0359dbe6",
        "type": "debug",
        "z": "cf729b4fc1f1e8be",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 510,
        "y": 340,
        "wires": []
    },
    {
        "id": "62d2669a51d58e2b",
        "type": "mqtt in",
        "z": "cf729b4fc1f1e8be",
        "name": "",
        "topic": "pi/selec/totalpower",
        "qos": "2",
        "datatype": "json",
        "broker": "7e51be116b0c32bd",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 440,
        "wires": [
            [
                "75a03e73dc5e6b5d"
            ]
        ]
    },
    {
        "id": "75a03e73dc5e6b5d",
        "type": "debug",
        "z": "cf729b4fc1f1e8be",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 440,
        "wires": []
    },
    {
        "id": "b640edd0a1e791a8",
        "type": "function",
        "z": "80b458d147b4e3f6",
        "name": "Voltage1",
        "func": "var rawData = new ArrayBuffer(4);\nvar intView = new Uint16Array(rawData);\nvar fltView = new Float32Array(rawData);\n\nintView[0] = msg.payload[1];\n\n//low\nintView[1] = msg.payload[0];\n\n//high\n\nmsg.payload = parseFloat(fltView[0].toFixed(1));\n\nmsg.topic = \"voltage1\"\n\n// node.status({fill:\"blue\",shape:\"ring\",text:msg.topic + \":\" + msg.payload});    \n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 280,
        "wires": [
            [
                "b8dd9069e33239ec"
            ]
        ]
    },
    {
        "id": "b8dd9069e33239ec",
        "type": "debug",
        "z": "80b458d147b4e3f6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "d598fcfd32bad8d7",
        "type": "modbus-read",
        "z": "80b458d147b4e3f6",
        "d": true,
        "name": "Selec",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "2",
        "dataType": "InputRegister",
        "adr": "1",
        "quantity": "2",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "dfba0e011b69d5c7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 170,
        "y": 280,
        "wires": [
            [
                "b640edd0a1e791a8",
                "bed8ee0d31d0df27"
            ],
            []
        ]
    },
    {
        "id": "bed8ee0d31d0df27",
        "type": "debug",
        "z": "80b458d147b4e3f6",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 220,
        "wires": []
    },
    {
        "id": "bc99f0b3264eb694",
        "type": "inject",
        "z": "80b458d147b4e3f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 120,
        "wires": [
            [
                "6edb401acdf63cbb"
            ]
        ]
    },
    {
        "id": "6edb401acdf63cbb",
        "type": "function",
        "z": "80b458d147b4e3f6",
        "name": "EM4M Slave 3",
        "func": "msg.payload = { value: msg.payload, 'fc': 4, 'unitid': 3, 'address': 1, 'quantity': 35 };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "bc3932c07891a4c6",
        "type": "function",
        "z": "80b458d147b4e3f6",
        "name": "EM2M Slave 2",
        "func": "msg.payload = { value: msg.payload, 'fc': 4, 'unitid': 2, 'address': 1, 'quantity': 35 };\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "cc4a2e4ced7dbe97",
        "type": "inject",
        "z": "80b458d147b4e3f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "bc3932c07891a4c6"
            ]
        ]
    },
    {
        "id": "e2fc9451c005c233",
        "type": "inject",
        "z": "80b458d147b4e3f6",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "{\"value\":0,\"fc\":4, \"unitid\":3, \"address\":1,\"quantity\":35}",
        "payloadType": "json",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "6edb401acdf63cbb"
            ]
        ]
    },
    {
        "id": "6ea53ad8.2362a4",
        "type": "debug",
        "z": "80b458d147b4e3f6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 610,
        "y": 420,
        "wires": []
    },
    {
        "id": "3da6946e.184a5c",
        "type": "inject",
        "z": "80b458d147b4e3f6",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 420,
        "wires": [
            [
                "38caaff4.03f6d",
                "6ea53ad8.2362a4"
            ]
        ]
    },
    {
        "id": "38caaff4.03f6d",
        "type": "trigger",
        "z": "80b458d147b4e3f6",
        "name": "Watchdog",
        "op1": "",
        "op2": "timeout",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 430,
        "y": 460,
        "wires": [
            [
                "ae477709.016088"
            ]
        ]
    },
    {
        "id": "ae477709.016088",
        "type": "debug",
        "z": "80b458d147b4e3f6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 460,
        "wires": []
    },
    {
        "id": "5e41bd4b2b4f7bdc",
        "type": "modbus-read",
        "z": "83b7744472225dce",
        "d": true,
        "name": "Pzem Phase 1 Load",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "10",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "dfba0e011b69d5c7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 80,
        "wires": [
            [
                "64722e32c2b0f28f"
            ],
            []
        ]
    },
    {
        "id": "64722e32c2b0f28f",
        "type": "function",
        "z": "83b7744472225dce",
        "name": "Phase 1 Load ",
        "func": "var Voltage = parseFloat((msg.payload[0]*0.1).toFixed(2));\nvar Current =  parseFloat(((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3));\nvar Power =  parseFloat(((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2));\nvar Energy =  parseFloat(((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3));\nvar Frequency = parseFloat((msg.payload[7]*0.1).toFixed(2));\nvar PowerFactor =  parseFloat((msg.payload[8]*0.01).toFixed(2));\n\nif (Power < 10000) {\nvalue = {\n    \"Voltage\": Voltage,\n    \"Current\": Current,\n    \"Power\": Power,\n    \"Energy\": Energy,\n    \"Frequency\": Frequency,\n    \"PowerFactor\": PowerFactor,\n        }\n\nphase1load = { \"1\": value}\n        \nmsg.payload = phase1load;\n// msg.topic = \"phase1load\";\nreturn msg;\n\n}\n\n\n// value = {\n//     \"Voltage\": (msg.payload[0]*0.1).toFixed(2),\n//     \"Current\": ((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3),\n//     \"Power\":((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2),\n//     \"Energy\": ((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3),\n//     \"Frequency\": (msg.payload[7]*0.1).toFixed(2),\n//     \"PowerFactor\": (msg.payload[8]*0.01).toFixed(2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n\n// msg.payload = (msg.payload[0] + ((msg.payload[1])*65536))*0.1\n\n// value = {\n//     \"Voltage\": Math.round((msg.payload[0]*0.1),1),\n//     \"Current\": Math.round(((msg.payload[1]+(msg.payload[2]*65536))*0.001),3),\n//     \"Power\":Math.round(((msg.payload[3]+(msg.payload[4]*65536))*0.1),1),\n//     \"Energy\": Math.round(((msg.payload[5]+(msg.payload[6]*65536))*0.001),3),\n//     \"Frequency\": Math.round((msg.payload[7]*0.1),1),\n//     \"PowerFactor\": Math.round((msg.payload[8]*0.01),2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 80,
        "wires": [
            [
                "1d6250e1c7454446",
                "224e737fb80956a0"
            ]
        ]
    },
    {
        "id": "1e9e947fcabd945a",
        "type": "modbus-read",
        "z": "83b7744472225dce",
        "d": true,
        "name": "Pzem Phase 2 Load",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "2",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "10",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "dfba0e011b69d5c7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 140,
        "wires": [
            [
                "ac453a8467ef915a"
            ],
            []
        ]
    },
    {
        "id": "ac453a8467ef915a",
        "type": "function",
        "z": "83b7744472225dce",
        "name": "Phase 2 Load ",
        "func": "var Voltage = parseFloat((msg.payload[0]*0.1).toFixed(2));\nvar Current =  parseFloat(((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3));\nvar Power =  parseFloat(((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2));\nvar Energy =  parseFloat((((msg.payload[5]+(msg.payload[6]*65536))*0.001)+ 1036).toFixed(3));//offset due to pzem reset\nvar Frequency = parseFloat((msg.payload[7]*0.1).toFixed(2));\nvar PowerFactor =  parseFloat((msg.payload[8]*0.01).toFixed(2));\n\nif (Power < 10000) {\nvalue = {\n    \"Voltage\": Voltage,\n    \"Current\": Current,\n    \"Power\": Power,\n    \"Energy\": Energy,\n    \"Frequency\": Frequency,\n    \"PowerFactor\": PowerFactor,\n        }\n\nphase2load = { \"2\": value}\n        \nmsg.payload = phase2load;\n// msg.topic = \"phase2load\";\nreturn msg;\n\n}\n\n\n// value = {\n//     \"Voltage\": (msg.payload[0]*0.1).toFixed(2),\n//     \"Current\": ((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3),\n//     \"Power\":((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2),\n//     \"Energy\": ((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3),\n//     \"Frequency\": (msg.payload[7]*0.1).toFixed(2),\n//     \"PowerFactor\": (msg.payload[8]*0.01).toFixed(2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n\n// msg.payload = (msg.payload[0] + ((msg.payload[1])*65536))*0.1\n\n// value = {\n//     \"Voltage\": Math.round((msg.payload[0]*0.1),1),\n//     \"Current\": Math.round(((msg.payload[1]+(msg.payload[2]*65536))*0.001),3),\n//     \"Power\":Math.round(((msg.payload[3]+(msg.payload[4]*65536))*0.1),1),\n//     \"Energy\": Math.round(((msg.payload[5]+(msg.payload[6]*65536))*0.001),3),\n//     \"Frequency\": Math.round((msg.payload[7]*0.1),1),\n//     \"PowerFactor\": Math.round((msg.payload[8]*0.01),2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 140,
        "wires": [
            [
                "1d6250e1c7454446",
                "af1d00906ea20efb",
                "224e737fb80956a0"
            ]
        ]
    },
    {
        "id": "5cf43b45648bd23c",
        "type": "modbus-read",
        "z": "83b7744472225dce",
        "d": true,
        "name": "Pzem Phase 3 Load",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "3",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "10",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "dfba0e011b69d5c7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 200,
        "wires": [
            [
                "574b93bc0748c730"
            ],
            []
        ]
    },
    {
        "id": "574b93bc0748c730",
        "type": "function",
        "z": "83b7744472225dce",
        "name": "Phase 3 Load ",
        "func": "var Voltage = parseFloat((msg.payload[0]*0.1).toFixed(2));\nvar Current =  parseFloat(((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3));\nvar Power =  parseFloat(((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2));\nvar Energy =  parseFloat(((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3));\nvar Frequency = parseFloat((msg.payload[7]*0.1).toFixed(2));\nvar PowerFactor =  parseFloat((msg.payload[8]*0.01).toFixed(2));\n\nif (Power < 10000) {\nvalue = {\n    \"Voltage\": Voltage,\n    \"Current\": Current,\n    \"Power\": Power,\n    \"Energy\": Energy + 1103,\n    \"Frequency\": Frequency,\n    \"PowerFactor\": PowerFactor,\n        }\n\nphase3load = { \"3\": value}\n        \nmsg.payload = phase3load;\n// msg.topic = \"phase3load\";\nreturn msg;\n\n}\n\n\n// value = {\n//     \"Voltage\": (msg.payload[0]*0.1).toFixed(2),\n//     \"Current\": ((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3),\n//     \"Power\":((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2),\n//     \"Energy\": ((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3),\n//     \"Frequency\": (msg.payload[7]*0.1).toFixed(2),\n//     \"PowerFactor\": (msg.payload[8]*0.01).toFixed(2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n\n// msg.payload = (msg.payload[0] + ((msg.payload[1])*65536))*0.1\n\n// value = {\n//     \"Voltage\": Math.round((msg.payload[0]*0.1),1),\n//     \"Current\": Math.round(((msg.payload[1]+(msg.payload[2]*65536))*0.001),3),\n//     \"Power\":Math.round(((msg.payload[3]+(msg.payload[4]*65536))*0.1),1),\n//     \"Energy\": Math.round(((msg.payload[5]+(msg.payload[6]*65536))*0.001),3),\n//     \"Frequency\": Math.round((msg.payload[7]*0.1),1),\n//     \"PowerFactor\": Math.round((msg.payload[8]*0.01),2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 200,
        "wires": [
            [
                "1d6250e1c7454446",
                "224e737fb80956a0"
            ]
        ]
    },
    {
        "id": "379a86e7afaa1f8f",
        "type": "modbus-read",
        "z": "83b7744472225dce",
        "d": true,
        "name": "Pzem Phase 1 solar",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "4",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "10",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "dfba0e011b69d5c7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 320,
        "wires": [
            [
                "17edde070c0620c0"
            ],
            []
        ]
    },
    {
        "id": "17edde070c0620c0",
        "type": "function",
        "z": "83b7744472225dce",
        "name": "Phase 1 Solar",
        "func": "var Voltage = parseFloat((msg.payload[0]*0.1).toFixed(2));\nvar Current =  parseFloat(((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3));\nvar Power =  parseFloat(((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2));\nvar Energy =  parseFloat(((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3));\nvar Frequency = parseFloat((msg.payload[7]*0.1).toFixed(2));\nvar PowerFactor =  parseFloat((msg.payload[8]*0.01).toFixed(2));\n\n\nif (Power < 10000) {\nvalue = {\n    \"Voltage\": Voltage,\n    \"Current\": Current,\n    \"Power\": Power,\n    \"Energy\": Energy,\n    \"Frequency\": Frequency,\n    \"PowerFactor\": PowerFactor,\n        }\n\nphase1solar = { \"4\": value}\n        \nmsg.payload = phase1solar;\n// msg.topic = \"phase1solar\";\nreturn msg;\n\n}\n\n\n// value = {\n//     \"Voltage\": (msg.payload[0]*0.1).toFixed(2),\n//     \"Current\": ((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3),\n//     \"Power\":((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2),\n//     \"Energy\": ((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3),\n//     \"Frequency\": (msg.payload[7]*0.1).toFixed(2),\n//     \"PowerFactor\": (msg.payload[8]*0.01).toFixed(2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n\n// msg.payload = (msg.payload[0] + ((msg.payload[1])*65536))*0.1\n\n// value = {\n//     \"Voltage\": Math.round((msg.payload[0]*0.1),1),\n//     \"Current\": Math.round(((msg.payload[1]+(msg.payload[2]*65536))*0.001),3),\n//     \"Power\":Math.round(((msg.payload[3]+(msg.payload[4]*65536))*0.1),1),\n//     \"Energy\": Math.round(((msg.payload[5]+(msg.payload[6]*65536))*0.001),3),\n//     \"Frequency\": Math.round((msg.payload[7]*0.1),1),\n//     \"PowerFactor\": Math.round((msg.payload[8]*0.01),2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 320,
        "wires": [
            [
                "1d6250e1c7454446",
                "f4dcee5e2abc47e7",
                "224e737fb80956a0"
            ]
        ]
    },
    {
        "id": "6136c0cd620985bf",
        "type": "modbus-read",
        "z": "83b7744472225dce",
        "d": true,
        "name": "Pzem Phase 2 Solar",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "5",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "10",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "dfba0e011b69d5c7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 380,
        "wires": [
            [
                "931c28c22327aa0f"
            ],
            []
        ]
    },
    {
        "id": "931c28c22327aa0f",
        "type": "function",
        "z": "83b7744472225dce",
        "name": "Phase 2 Solar",
        "func": "var Voltage = parseFloat((msg.payload[0]*0.1).toFixed(2));\nvar Current =  parseFloat(((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3));\nvar Power =  parseFloat(((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2));\nvar Energy =  parseFloat(((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3));\nvar Frequency = parseFloat((msg.payload[7]*0.1).toFixed(2));\nvar PowerFactor =  parseFloat((msg.payload[8]*0.01).toFixed(2));\n    // \"Alarm\": int(msg.payload[9]>0),\n\n\nif (Power < 10000) {\nvalue = {\n    \"Voltage\": Voltage,\n    \"Current\": Current,\n    \"Power\": Power,\n    \"Energy\": Energy,\n    \"Frequency\": Frequency,\n    \"PowerFactor\": PowerFactor,\n        }\n\n\n// value = {\n//     \"Voltage\": (msg.payload[0]*0.1).toFixed(2),\n//     \"Current\": ((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3),\n//     \"Power\":((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2),\n//     \"Energy\": ((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3),\n//     \"Frequency\": (msg.payload[7]*0.1).toFixed(2),\n//     \"PowerFactor\": (msg.payload[8]*0.01).toFixed(2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n\n\nphase2solar = { \"5\": value}\n        \nmsg.payload = phase2solar;\n// msg.topic = \"phase2solar\";\nreturn msg;\n\n }\n\n\n\n\n// msg.payload = (msg.payload[0] + ((msg.payload[1])*65536))*0.1\n\n// value = {\n//     \"Voltage\": Math.round((msg.payload[0]*0.1),1),\n//     \"Current\": Math.round(((msg.payload[1]+(msg.payload[2]*65536))*0.001),3),\n//     \"Power\":Math.round(((msg.payload[3]+(msg.payload[4]*65536))*0.1),1),\n//     \"Energy\": Math.round(((msg.payload[5]+(msg.payload[6]*65536))*0.001),3),\n//     \"Frequency\": Math.round((msg.payload[7]*0.1),1),\n//     \"PowerFactor\": Math.round((msg.payload[8]*0.01),2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 380,
        "wires": [
            [
                "1d6250e1c7454446",
                "224e737fb80956a0"
            ]
        ]
    },
    {
        "id": "7a1835ce8b3122e0",
        "type": "modbus-read",
        "z": "83b7744472225dce",
        "d": true,
        "name": "Pzem Phase 3 Solar",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "unitid": "6",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "10",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "dfba0e011b69d5c7",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 440,
        "wires": [
            [
                "082093cf2bf0c0d2"
            ],
            []
        ]
    },
    {
        "id": "082093cf2bf0c0d2",
        "type": "function",
        "z": "83b7744472225dce",
        "name": "Phase 3 Solar",
        "func": "var Voltage = parseFloat((msg.payload[0]*0.1).toFixed(2));\nvar Current =  parseFloat(((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3));\nvar Power =  parseFloat(((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2));\nvar Energy =  parseFloat(((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3));\nvar Frequency = parseFloat((msg.payload[7]*0.1).toFixed(2));\nvar PowerFactor =  parseFloat((msg.payload[8]*0.01).toFixed(2));\n\nif (Power < 10000) {\nvalue = {\n    \"Voltage\": Voltage,\n    \"Current\": Current,\n    \"Power\": Power,\n    \"Energy\": Energy,\n    \"Frequency\": Frequency,\n    \"PowerFactor\": PowerFactor,\n        }\n\nphase3solar = { \"6\": value}\n        \nmsg.payload = phase3solar;\n// msg.topic = \"phase3solar\";\nreturn msg;\n\n}\n\n\n// value = {\n//     \"Voltage\": (msg.payload[0]*0.1).toFixed(2),\n//     \"Current\": ((msg.payload[1]+(msg.payload[2]*65536))*0.001).toFixed(3),\n//     \"Power\":((msg.payload[3]+(msg.payload[4]*65536))*0.1).toFixed(2),\n//     \"Energy\": ((msg.payload[5]+(msg.payload[6]*65536))*0.001).toFixed(3),\n//     \"Frequency\": (msg.payload[7]*0.1).toFixed(2),\n//     \"PowerFactor\": (msg.payload[8]*0.01).toFixed(2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n\n// msg.payload = (msg.payload[0] + ((msg.payload[1])*65536))*0.1\n\n// value = {\n//     \"Voltage\": Math.round((msg.payload[0]*0.1),1),\n//     \"Current\": Math.round(((msg.payload[1]+(msg.payload[2]*65536))*0.001),3),\n//     \"Power\":Math.round(((msg.payload[3]+(msg.payload[4]*65536))*0.1),1),\n//     \"Energy\": Math.round(((msg.payload[5]+(msg.payload[6]*65536))*0.001),3),\n//     \"Frequency\": Math.round((msg.payload[7]*0.1),1),\n//     \"PowerFactor\": Math.round((msg.payload[8]*0.01),2),\n//     // \"Alarm\": int(msg.payload[9]>0),\n//         }\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 440,
        "wires": [
            [
                "1d6250e1c7454446",
                "f4dcee5e2abc47e7",
                "224e737fb80956a0"
            ]
        ]
    },
    {
        "id": "1d6250e1c7454446",
        "type": "mqtt out",
        "z": "83b7744472225dce",
        "d": true,
        "name": "pi/readpzem",
        "topic": "pi/readpzem",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "491a1f29df6d8950",
        "x": 690,
        "y": 260,
        "wires": []
    },
    {
        "id": "af1d00906ea20efb",
        "type": "debug",
        "z": "83b7744472225dce",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 360,
        "wires": []
    },
    {
        "id": "2064898b7b899a01",
        "type": "comment",
        "z": "83b7744472225dce",
        "name": "Nodered-Contrib-modbus",
        "info": "Using nodered-contrib modbus addon to read modbus from Pzem energy meters.",
        "x": 690,
        "y": 40,
        "wires": []
    },
    {
        "id": "0500a7e8c2511270",
        "type": "comment",
        "z": "83b7744472225dce",
        "name": "Pzem Meters Modbus documentation",
        "info": " \nReading  registers 0 to 10 at once to capture all values as done in Python code ==>\n\nhttps://github.com/vjversatile/Pzem-004tv3-Python-Raspberry-PI\n\nSome parameters have values in 2 registers, so they are added up to get the final value. refer below.\n\n \n data = self.read_registers(0,10,4)\n \n            value = {\n                \"Voltage\": round((data[0]*0.1),1),\n                \"Current\": round(((data[1]+(data[2]*65536))*0.001),3),\n                \"Power\": round(((data[3]+(data[4]*65536))*0.1),1),\n                \"Energy\": round(((data[5]+(data[6]*65536))*0.001),3),\n                \"Frequency\": round((data[7]*0.1),1),\n                \"PowerFactor\": round((data[8]*0.01),2),\n                \"Alarm\": int(data[9]>0),\n            }",
        "x": 730,
        "y": 80,
        "wires": []
    },
    {
        "id": "bb71600fd0de8875",
        "type": "comment",
        "z": "83b7744472225dce",
        "name": "Filter high reading ",
        "info": "PZem meters seem to be sending some randon high values when power is back after a power cut and messing overall data. \n\nUsing if condition to ignore readings with a high value.",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "89d36ea9b3e1f4cb",
        "type": "comment",
        "z": "83b7744472225dce",
        "name": "Mqtt to Home assistant and nodered ",
        "info": "\n\npi/readpzem topic is used to send data over mqtt which is inturn subscribed by home assistant directly and by nodered for self computation and monthly meter reading computations.\n\n",
        "x": 720,
        "y": 160,
        "wires": []
    },
    {
        "id": "f4dcee5e2abc47e7",
        "type": "debug",
        "z": "83b7744472225dce",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 440,
        "wires": []
    },
    {
        "id": "224e737fb80956a0",
        "type": "mqtt out",
        "z": "83b7744472225dce",
        "name": "HA10 PZEM MQTT",
        "topic": "pi/readpzem",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c82dcf94414b0be",
        "x": 710,
        "y": 300,
        "wires": []
    },
    {
        "id": "ced0be91.03be",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "969e91d0.12682",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 700,
        "wires": [
            [
                "8add58a8.ca66c8",
                "cdcb24c5.bc4298"
            ]
        ]
    },
    {
        "id": "8add58a8.ca66c8",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "969e91d0.12682",
        "name": "Price compare",
        "func": "if (msg.payload.price < 2500) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 700,
        "wires": [
            [
                "9823aaa869d43745"
            ]
        ]
    },
    {
        "id": "e1138d4a.5b7f1",
        "type": "inject",
        "z": "704041ab.e9cd3",
        "g": "969e91d0.12682",
        "name": "Motul Xcess 8100",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1320",
        "crontab": "",
        "once": true,
        "onceDelay": "13",
        "topic": "",
        "payload": "https://www.amazon.in/dp/B071P6NVB7/",
        "payloadType": "str",
        "x": 190,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "998521a3.d3759",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "969e91d0.12682",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 700,
        "wires": [
            [
                "ced0be91.03be"
            ]
        ]
    },
    {
        "id": "cdcb24c5.bc4298",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "969e91d0.12682",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 868,
        "y": 749,
        "wires": [
            [
                "91dec00366d08213"
            ]
        ]
    },
    {
        "id": "e3d9897f.313f48",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "1d9dc60a.89eaea",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 860,
        "wires": [
            [
                "fa4f42b0.b6a07",
                "ceffda2d.85dcb8"
            ]
        ]
    },
    {
        "id": "fa4f42b0.b6a07",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "1d9dc60a.89eaea",
        "name": "Price compare",
        "func": "if (msg.payload.price < 1900) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 860,
        "wires": [
            [
                "1d1e07fe5d686f58"
            ]
        ]
    },
    {
        "id": "3cc51a4b.6af5c6",
        "type": "inject",
        "z": "704041ab.e9cd3",
        "d": true,
        "g": "1d9dc60a.89eaea",
        "name": "Tata Power Ex fan regulator",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3120",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "https://www.amazon.in/dp/B09CGX1JQK",
        "payloadType": "str",
        "x": 200,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "c3e1122a.4219d",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "1d9dc60a.89eaea",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 860,
        "wires": [
            [
                "e3d9897f.313f48"
            ]
        ]
    },
    {
        "id": "ceffda2d.85dcb8",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "1d9dc60a.89eaea",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 888,
        "y": 909,
        "wires": [
            [
                "26802c0078047516"
            ]
        ]
    },
    {
        "id": "5b199cd6f3417654",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "55a03d92dab54f02",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 1080,
        "wires": [
            [
                "bebbb120b4d6cff2",
                "a3d052dd091d84cb"
            ]
        ]
    },
    {
        "id": "bebbb120b4d6cff2",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "55a03d92dab54f02",
        "name": "Price compare",
        "func": "if (msg.payload.price < 3700 && msg.payload.price > 1000 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 1080,
        "wires": [
            [
                "52998d11f676e2aa"
            ]
        ]
    },
    {
        "id": "870569c08767ccab",
        "type": "inject",
        "z": "704041ab.e9cd3",
        "g": "55a03d92dab54f02",
        "name": "AB 100W GAN",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "840",
        "crontab": "",
        "once": true,
        "onceDelay": "30",
        "topic": "",
        "payload": "https://www.amazon.in/dp/B0CCPCGK47",
        "payloadType": "str",
        "x": 160,
        "y": 1120,
        "wires": [
            [
                "6587cc5bb60d2489"
            ]
        ]
    },
    {
        "id": "5fbea85af6cd4510",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "55a03d92dab54f02",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 1080,
        "wires": [
            [
                "5b199cd6f3417654"
            ]
        ]
    },
    {
        "id": "a3d052dd091d84cb",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "55a03d92dab54f02",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 888,
        "y": 1129,
        "wires": [
            [
                "960dd526a725e2ae"
            ]
        ]
    },
    {
        "id": "44f2f7801c54906b",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "9d89888844cf6478",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 1320,
        "wires": [
            [
                "e0acbeb3e1b35bf9",
                "0fd235c9ec8a5b7a"
            ]
        ]
    },
    {
        "id": "e0acbeb3e1b35bf9",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "9d89888844cf6478",
        "name": "Price compare",
        "func": "if (msg.payload.price < 2500 && msg.payload.price > 300) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1320,
        "wires": [
            [
                "7b65f75bb150341e"
            ]
        ]
    },
    {
        "id": "3489d1b4ec012562",
        "type": "inject",
        "z": "704041ab.e9cd3",
        "g": "9d89888844cf6478",
        "name": "philips induction",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "840",
        "crontab": "",
        "once": true,
        "onceDelay": "53",
        "topic": "",
        "payload": "https://www.amazon.in/dp/B00EDJJ7FS",
        "payloadType": "str",
        "x": 190,
        "y": 1360,
        "wires": [
            [
                "e12b52dbe1d429f8"
            ]
        ]
    },
    {
        "id": "3638372b514e2d36",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "9d89888844cf6478",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 1320,
        "wires": [
            [
                "44f2f7801c54906b"
            ]
        ]
    },
    {
        "id": "0fd235c9ec8a5b7a",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "9d89888844cf6478",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 908,
        "y": 1369,
        "wires": [
            [
                "1d5ef1fe8fbcbbb8",
                "f446a55246ca9fd2"
            ]
        ]
    },
    {
        "id": "c117fa18e6d629de",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "8daadbffb3b253b3",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 1740,
        "wires": [
            [
                "b5bab246749b10eb",
                "221ee6849ffe0b03"
            ]
        ]
    },
    {
        "id": "b5bab246749b10eb",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "8daadbffb3b253b3",
        "name": "Price compare",
        "func": "if (msg.payload.price < 700 && msg.payload.price > 200) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1740,
        "wires": [
            [
                "a8ac6089a7def170"
            ]
        ]
    },
    {
        "id": "0d01312a0fab58a4",
        "type": "inject",
        "z": "704041ab.e9cd3",
        "g": "8daadbffb3b253b3",
        "name": "camera light",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "180",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "",
        "payload": "https://www.amazon.in/dp/B0CCXWQDR5",
        "payloadType": "str",
        "x": 180,
        "y": 1780,
        "wires": [
            [
                "94a1cba28292b35a"
            ]
        ]
    },
    {
        "id": "f598d14124433188",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "8daadbffb3b253b3",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1740,
        "wires": [
            [
                "c117fa18e6d629de"
            ]
        ]
    },
    {
        "id": "221ee6849ffe0b03",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "8daadbffb3b253b3",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 908,
        "y": 1789,
        "wires": [
            [
                "95a5796cdd8a660b"
            ]
        ]
    },
    {
        "id": "0a21a2b096484a53",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "e79477378724c857",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 1520,
        "wires": [
            [
                "c57fe439ea4e6501",
                "4b1994e9c4494d0f"
            ]
        ]
    },
    {
        "id": "c57fe439ea4e6501",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "e79477378724c857",
        "name": "Price compare",
        "func": "if (msg.payload.price < 2000) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1520,
        "wires": [
            [
                "fa062b7a66b9be49"
            ]
        ]
    },
    {
        "id": "3b333c3a6aa2c1a7",
        "type": "inject",
        "z": "704041ab.e9cd3",
        "g": "e79477378724c857",
        "name": "Usha induction 1600",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "27",
        "topic": "",
        "payload": "https://www.amazon.in/dp/B072PXYG1R",
        "payloadType": "str",
        "x": 200,
        "y": 1560,
        "wires": [
            [
                "1171911afaea9088"
            ]
        ]
    },
    {
        "id": "9f25a507d1ebcec2",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "e79477378724c857",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1520,
        "wires": [
            [
                "0a21a2b096484a53",
                "5899d279e63610df"
            ]
        ]
    },
    {
        "id": "4b1994e9c4494d0f",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "e79477378724c857",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 908,
        "y": 1569,
        "wires": [
            [
                "bb59a4c417616f63"
            ]
        ]
    },
    {
        "id": "5899d279e63610df",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "g": "e79477378724c857",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1620,
        "wires": []
    },
    {
        "id": "c0ad1bd1aaaa9c36",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "2bb1f5b7b32a4709",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 670,
        "y": 60,
        "wires": [
            [
                "692edbf11cfd5327",
                "86400455fd644360",
                "8bcf78f34a03c2ee"
            ]
        ]
    },
    {
        "id": "692edbf11cfd5327",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "2bb1f5b7b32a4709",
        "name": "Price compare",
        "func": "if (msg.payload.price < 400) {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } \nelse \n        return null;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 60,
        "wires": [
            [
                "271a2b4e4079eb3a"
            ]
        ]
    },
    {
        "id": "ac17b7ed875546fd",
        "type": "inject",
        "z": "704041ab.e9cd3",
        "g": "2bb1f5b7b32a4709",
        "name": "OTG SDcard reader",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1080",
        "crontab": "",
        "once": true,
        "onceDelay": "26",
        "topic": "",
        "payload": "https://www.amazon.in/dp/B0BR3HPPNL",
        "payloadType": "str",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "d24bd639e1990f66"
            ]
        ]
    },
    {
        "id": "3d19f53128b8286f",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "2bb1f5b7b32a4709",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 60,
        "wires": [
            [
                "c0ad1bd1aaaa9c36"
            ]
        ]
    },
    {
        "id": "86400455fd644360",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "2bb1f5b7b32a4709",
        "name": "",
        "func": "    msg.payload = msg.payload.price\n\n    return msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 120,
        "wires": [
            [
                "8679f5f3a819f148"
            ]
        ]
    },
    {
        "id": "85f7ceca71381ab6",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "25bccfb620fd68fd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 300,
        "wires": [
            [
                "f068cd7a63f3a556",
                "6864a936fbe95765",
                "cb7589feec8acaf2"
            ]
        ]
    },
    {
        "id": "f068cd7a63f3a556",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "25bccfb620fd68fd",
        "name": "Price compare",
        "func": "if (msg.payload.price < 350 && msg.payload.price > 150) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 300,
        "wires": [
            [
                "1dd9c8e102272d63"
            ]
        ]
    },
    {
        "id": "bc0f4bf3e561f4b1",
        "type": "inject",
        "z": "704041ab.e9cd3",
        "g": "25bccfb620fd68fd",
        "name": "listernine ",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "480",
        "crontab": "",
        "once": true,
        "onceDelay": "26",
        "topic": "",
        "payload": "https://www.amazon.in/dp/B07612CW8N",
        "payloadType": "str",
        "x": 170,
        "y": 300,
        "wires": [
            [
                "d21aec6cfe859b6a"
            ]
        ]
    },
    {
        "id": "52860de41a302f74",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "25bccfb620fd68fd",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "85f7ceca71381ab6"
            ]
        ]
    },
    {
        "id": "6864a936fbe95765",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "25bccfb620fd68fd",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 868,
        "y": 349,
        "wires": [
            [
                "4241556f73b496df"
            ]
        ]
    },
    {
        "id": "eb1bc7940c5bd06f",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "7bdac3a653878839",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 1940,
        "wires": [
            [
                "925909afc83a02cf",
                "595834b7d0b53e7c"
            ]
        ]
    },
    {
        "id": "925909afc83a02cf",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "7bdac3a653878839",
        "name": "Price compare",
        "func": "if (msg.payload.price < 400 && msg.payload.price > 150) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1940,
        "wires": [
            [
                "70c6723d2ff013ff"
            ]
        ]
    },
    {
        "id": "cab3937fc1996d63",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "7bdac3a653878839",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1940,
        "wires": [
            [
                "eb1bc7940c5bd06f"
            ]
        ]
    },
    {
        "id": "595834b7d0b53e7c",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "7bdac3a653878839",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 908,
        "y": 1989,
        "wires": [
            [
                "abec36ecbdb7194f"
            ]
        ]
    },
    {
        "id": "dbe3dabc183eb7ac",
        "type": "inject",
        "z": "704041ab.e9cd3",
        "g": "7bdac3a653878839",
        "name": "Dove Intense repair",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1080",
        "crontab": "",
        "once": true,
        "onceDelay": "26",
        "topic": "",
        "payload": "https://www.amazon.in/dp/B07H9SV624",
        "payloadType": "str",
        "x": 200,
        "y": 1940,
        "wires": [
            [
                "2a5208cb63f95bd8"
            ]
        ]
    },
    {
        "id": "1d5ef1fe8fbcbbb8",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 1380,
        "wires": []
    },
    {
        "id": "1319945ff74a26bc",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "e5152208272e57e7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 770,
        "y": 2280,
        "wires": [
            [
                "900153f4543314cc",
                "be218b96088474b4"
            ]
        ]
    },
    {
        "id": "be218b96088474b4",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "e5152208272e57e7",
        "name": "Price compare",
        "func": "if (msg.payload.price < 599 && msg.payload.price > 280) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 2280,
        "wires": [
            [
                "8f62b7dd1758fc0e"
            ]
        ]
    },
    {
        "id": "3ea02ae4fdaf7e7f",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "e5152208272e57e7",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2280,
        "wires": [
            [
                "1319945ff74a26bc"
            ]
        ]
    },
    {
        "id": "900153f4543314cc",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "e5152208272e57e7",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 928,
        "y": 2329,
        "wires": [
            [
                "9f32e0a941aaf9f1"
            ]
        ]
    },
    {
        "id": "1279b4354b016fae",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "ba35aaa0d8db98fb",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 520,
        "wires": [
            [
                "e43b8d27eeafd66a",
                "d1f99a834b3d3b9d"
            ]
        ]
    },
    {
        "id": "e43b8d27eeafd66a",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "ba35aaa0d8db98fb",
        "name": "Price compare",
        "func": "if (msg.payload.price < 399 && msg.payload.price > 200) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 520,
        "wires": [
            [
                "1fc34a3704bdde8e"
            ]
        ]
    },
    {
        "id": "12fd9dc2629587b4",
        "type": "inject",
        "z": "704041ab.e9cd3",
        "g": "ba35aaa0d8db98fb",
        "name": "Dove weak hair",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "480",
        "crontab": "",
        "once": true,
        "onceDelay": "26",
        "topic": "",
        "payload": "https://www.amazon.in/dp/B07H9T25WH",
        "payloadType": "str",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "3529972e3960826f"
            ]
        ]
    },
    {
        "id": "392c04efb19a273e",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "ba35aaa0d8db98fb",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 520,
        "wires": [
            [
                "1279b4354b016fae"
            ]
        ]
    },
    {
        "id": "d1f99a834b3d3b9d",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "ba35aaa0d8db98fb",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 868,
        "y": 569,
        "wires": [
            [
                "677c1a8472d1de94"
            ]
        ]
    },
    {
        "id": "cd4bcfee8ec78866",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "19017f80fe8eed6e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 2540,
        "wires": [
            [
                "88c042e105b99cbc",
                "9a1709b9ef33996b"
            ]
        ]
    },
    {
        "id": "9a1709b9ef33996b",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "19017f80fe8eed6e",
        "name": "Price compare",
        "func": "if (msg.payload.price < 227 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2540,
        "wires": [
            [
                "df5ce71067c30168"
            ]
        ]
    },
    {
        "id": "d6d13a02640c4c01",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "19017f80fe8eed6e",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2540,
        "wires": [
            [
                "cd4bcfee8ec78866"
            ]
        ]
    },
    {
        "id": "88c042e105b99cbc",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "19017f80fe8eed6e",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 968,
        "y": 2589,
        "wires": [
            [
                "760eb7c556e9d24f"
            ]
        ]
    },
    {
        "id": "6207021b7e2694d2",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "15bd4c5881ea193d",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 2740,
        "wires": [
            [
                "5a9e6c236734a1f2",
                "20cd850255cf683d",
                "4ff34faf67c64cc8"
            ]
        ]
    },
    {
        "id": "20cd850255cf683d",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "15bd4c5881ea193d",
        "name": "Price compare",
        "func": "if (msg.payload.price < 260 && msg.payload.price > 40 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2740,
        "wires": [
            [
                "00ea7cecda3cd0ab"
            ]
        ]
    },
    {
        "id": "5b3fc6b2abc132a3",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "15bd4c5881ea193d",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 2740,
        "wires": [
            [
                "6207021b7e2694d2"
            ]
        ]
    },
    {
        "id": "5a9e6c236734a1f2",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "15bd4c5881ea193d",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 968,
        "y": 2789,
        "wires": [
            [
                "85f6c10526239111"
            ]
        ]
    },
    {
        "id": "b615dcf6a4f2f038",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "c5f1046ee557c975",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 2960,
        "wires": [
            [
                "e1dcce6e196ef686",
                "c0dc6560e513fc66"
            ]
        ]
    },
    {
        "id": "c0dc6560e513fc66",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "c5f1046ee557c975",
        "name": "Price compare",
        "func": "if (msg.payload.price < 537) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2960,
        "wires": [
            [
                "97774660a766f623"
            ]
        ]
    },
    {
        "id": "8d559a0afff77df5",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "c5f1046ee557c975",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 2960,
        "wires": [
            [
                "b615dcf6a4f2f038"
            ]
        ]
    },
    {
        "id": "e1dcce6e196ef686",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "c5f1046ee557c975",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 908,
        "y": 3009,
        "wires": [
            [
                "af974d363218ed23"
            ]
        ]
    },
    {
        "id": "5da6b7f81d0d20ab",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "974c830c450e17d7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 770,
        "y": 3140,
        "wires": [
            [
                "83f9e419d4b8e53a",
                "d279897a61d75922"
            ]
        ]
    },
    {
        "id": "d279897a61d75922",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "974c830c450e17d7",
        "name": "Price compare",
        "func": "if (msg.payload.price < 600 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 3140,
        "wires": [
            [
                "0e8d4dd4f12c93c1"
            ]
        ]
    },
    {
        "id": "acea76d72af8cb29",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "974c830c450e17d7",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 3140,
        "wires": [
            [
                "5da6b7f81d0d20ab"
            ]
        ]
    },
    {
        "id": "83f9e419d4b8e53a",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "974c830c450e17d7",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 928,
        "y": 3189,
        "wires": [
            [
                "610128f7b9adf92b"
            ]
        ]
    },
    {
        "id": "be386686d39a490d",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "c7139aaff85b5fba",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 790,
        "y": 3480,
        "wires": [
            [
                "35795851b22ef049",
                "b26d838bfdf61d7a"
            ]
        ]
    },
    {
        "id": "b26d838bfdf61d7a",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "c7139aaff85b5fba",
        "name": "Price compare",
        "func": "if (msg.payload.price < 383 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 3480,
        "wires": [
            [
                "1d133d2e63b1732d"
            ]
        ]
    },
    {
        "id": "805d4f73eee1d589",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "c7139aaff85b5fba",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 3480,
        "wires": [
            [
                "be386686d39a490d"
            ]
        ]
    },
    {
        "id": "35795851b22ef049",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "c7139aaff85b5fba",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 948,
        "y": 3529,
        "wires": [
            [
                "18c459d8f7b1b6bd"
            ]
        ]
    },
    {
        "id": "2c1751e11e6ce202",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "d120ad6f3aadb503",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 830,
        "y": 3720,
        "wires": [
            [
                "f6aa1376499441ed",
                "2ad8d5eb96335983"
            ]
        ]
    },
    {
        "id": "2ad8d5eb96335983",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "d120ad6f3aadb503",
        "name": "Price compare",
        "func": "if (msg.payload.price < 880 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 3720,
        "wires": [
            [
                "71254e4548a1d5fb"
            ]
        ]
    },
    {
        "id": "aefb477cfa9b0773",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "d120ad6f3aadb503",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 3720,
        "wires": [
            [
                "2c1751e11e6ce202"
            ]
        ]
    },
    {
        "id": "f6aa1376499441ed",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "d120ad6f3aadb503",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 988,
        "y": 3769,
        "wires": [
            [
                "0dabad5b48c9aade"
            ]
        ]
    },
    {
        "id": "4241556f73b496df",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "25bccfb620fd68fd",
        "influxdb": "c13ec768bcc1f442",
        "name": "listerine-ha10influx",
        "measurement": "listerine",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1070,
        "y": 400,
        "wires": []
    },
    {
        "id": "8679f5f3a819f148",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "2bb1f5b7b32a4709",
        "influxdb": "c13ec768bcc1f442",
        "name": "OTG SD card reader-ha10influx",
        "measurement": "otgsdcard",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1090,
        "y": 160,
        "wires": []
    },
    {
        "id": "677c1a8472d1de94",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "ba35aaa0d8db98fb",
        "influxdb": "c13ec768bcc1f442",
        "name": "Dove1LWeakhair-ha10influx",
        "measurement": "Dove1LWeakhair",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1100,
        "y": 620,
        "wires": []
    },
    {
        "id": "91dec00366d08213",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "969e91d0.12682",
        "influxdb": "c13ec768bcc1f442",
        "name": "Motul8100-ha10influx",
        "measurement": "Motul8100",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1060,
        "y": 800,
        "wires": []
    },
    {
        "id": "26802c0078047516",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "1d9dc60a.89eaea",
        "influxdb": "c13ec768bcc1f442",
        "name": "Tatasmartregulator-ha10influx",
        "measurement": "Tatasmartregulator",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1130,
        "y": 960,
        "wires": []
    },
    {
        "id": "960dd526a725e2ae",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "55a03d92dab54f02",
        "influxdb": "c13ec768bcc1f442",
        "name": "AB100WGan-ha10influx",
        "measurement": "Gan100W",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1070,
        "y": 1200,
        "wires": []
    },
    {
        "id": "f446a55246ca9fd2",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "9d89888844cf6478",
        "influxdb": "c13ec768bcc1f442",
        "name": "philips induction",
        "measurement": "philipsinduction",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1100,
        "y": 1420,
        "wires": []
    },
    {
        "id": "bb59a4c417616f63",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "e79477378724c857",
        "influxdb": "c13ec768bcc1f442",
        "name": "usha1600 induction-ha10influx",
        "measurement": "usha1600induc",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1130,
        "y": 1640,
        "wires": []
    },
    {
        "id": "95a5796cdd8a660b",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "8daadbffb3b253b3",
        "influxdb": "c13ec768bcc1f442",
        "name": "amznlight-ha10influx",
        "measurement": "amznlight",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1100,
        "y": 1840,
        "wires": []
    },
    {
        "id": "abec36ecbdb7194f",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "7bdac3a653878839",
        "influxdb": "c13ec768bcc1f442",
        "name": "Dove1LIntenserep-ha10influx",
        "measurement": "Dove1LIntenserep",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1120,
        "y": 2040,
        "wires": []
    },
    {
        "id": "9f32e0a941aaf9f1",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "e5152208272e57e7",
        "influxdb": "c13ec768bcc1f442",
        "name": "wiprons9400-ha10influx",
        "measurement": "wiprons9400",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1150,
        "y": 2380,
        "wires": []
    },
    {
        "id": "760eb7c556e9d24f",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "19017f80fe8eed6e",
        "influxdb": "c13ec768bcc1f442",
        "name": "himalayafacewash-ha10influx",
        "measurement": "himalayafacewash",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1190,
        "y": 2640,
        "wires": []
    },
    {
        "id": "85f6c10526239111",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "15bd4c5881ea193d",
        "influxdb": "c13ec768bcc1f442",
        "name": "niveacreamblue-ha10influx",
        "measurement": "niveacreamblue",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1200,
        "y": 2840,
        "wires": []
    },
    {
        "id": "af974d363218ed23",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "c5f1046ee557c975",
        "influxdb": "c13ec768bcc1f442",
        "name": "pan24amznbasi-ha10influx",
        "measurement": "pan24amznbasi",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1140,
        "y": 3060,
        "wires": []
    },
    {
        "id": "610128f7b9adf92b",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "974c830c450e17d7",
        "influxdb": "c13ec768bcc1f442",
        "name": "amznknives-ha10influx",
        "measurement": "amznknives",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1140,
        "y": 3240,
        "wires": []
    },
    {
        "id": "18c459d8f7b1b6bd",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "c7139aaff85b5fba",
        "influxdb": "c13ec768bcc1f442",
        "name": "lorealshampoo",
        "measurement": "lorealshampoo",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1120,
        "y": 3580,
        "wires": []
    },
    {
        "id": "0dabad5b48c9aade",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "d120ad6f3aadb503",
        "influxdb": "c13ec768bcc1f442",
        "name": "amznwok-ha10influx",
        "measurement": "amznwok",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1160,
        "y": 3840,
        "wires": []
    },
    {
        "id": "e5defacb51914e8e",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "g": "19017f80fe8eed6e",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 2640,
        "wires": []
    },
    {
        "id": "4ff34faf67c64cc8",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "g": "15bd4c5881ea193d",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 2840,
        "wires": []
    },
    {
        "id": "7d509f36a7c36e79",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "2eb8719b39ddd0c0",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 790,
        "y": 4040,
        "wires": [
            [
                "9b811e569ac4fdea",
                "563677414f14fd7f",
                "34080140c54cde7e"
            ]
        ]
    },
    {
        "id": "563677414f14fd7f",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "2eb8719b39ddd0c0",
        "name": "Price compare",
        "func": "if (msg.payload.price < 1500 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 4040,
        "wires": [
            [
                "08808f61ba3666fd"
            ]
        ]
    },
    {
        "id": "c1aefb88058b842a",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "2eb8719b39ddd0c0",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 4040,
        "wires": [
            [
                "7d509f36a7c36e79"
            ]
        ]
    },
    {
        "id": "9b811e569ac4fdea",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "2eb8719b39ddd0c0",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 948,
        "y": 4089,
        "wires": [
            [
                "aa565451958e6ada"
            ]
        ]
    },
    {
        "id": "aa565451958e6ada",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "2eb8719b39ddd0c0",
        "influxdb": "c13ec768bcc1f442",
        "name": "amzntorque wrench ha10",
        "measurement": "amzntorque",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1130,
        "y": 4160,
        "wires": []
    },
    {
        "id": "34080140c54cde7e",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "g": "2eb8719b39ddd0c0",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 4140,
        "wires": []
    },
    {
        "id": "238ff4bfe6ad1bae",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "e83a1cb9517a0cc7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 790,
        "y": 4300,
        "wires": [
            [
                "b74f68908a698a70",
                "4496bc64cb04ea24"
            ]
        ]
    },
    {
        "id": "4496bc64cb04ea24",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "e83a1cb9517a0cc7",
        "name": "Price compare",
        "func": "if (msg.payload.price < 2000 && msg.payload.price > 500 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 4300,
        "wires": [
            [
                "a2e3764f6f82e574"
            ]
        ]
    },
    {
        "id": "a06ac11fe38921e5",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "e83a1cb9517a0cc7",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 4300,
        "wires": [
            [
                "238ff4bfe6ad1bae"
            ]
        ]
    },
    {
        "id": "b74f68908a698a70",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "e83a1cb9517a0cc7",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 948,
        "y": 4349,
        "wires": [
            [
                "164c3f8a5f0abe7e"
            ]
        ]
    },
    {
        "id": "164c3f8a5f0abe7e",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "e83a1cb9517a0cc7",
        "influxdb": "c13ec768bcc1f442",
        "name": "ABinduc1900",
        "measurement": "ABinduc1900",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1090,
        "y": 4420,
        "wires": []
    },
    {
        "id": "220f99cf9c051d19",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "g": "e83a1cb9517a0cc7",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 4400,
        "wires": []
    },
    {
        "id": "1ea5e8247be88fb5",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "6ca20a30cf77ebfd",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 790,
        "y": 4980,
        "wires": [
            [
                "9c133e15fe2d6bd9",
                "ae8986d62d341043"
            ]
        ]
    },
    {
        "id": "ae8986d62d341043",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "6ca20a30cf77ebfd",
        "name": "Price compare",
        "func": "if (msg.payload.price < 149 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 4980,
        "wires": [
            [
                "bd1cd5b0636d55e2"
            ]
        ]
    },
    {
        "id": "228f03e94449e553",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "6ca20a30cf77ebfd",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 4980,
        "wires": [
            [
                "1ea5e8247be88fb5"
            ]
        ]
    },
    {
        "id": "9c133e15fe2d6bd9",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "6ca20a30cf77ebfd",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 948,
        "y": 5029,
        "wires": [
            [
                "9506da705688622e"
            ]
        ]
    },
    {
        "id": "9506da705688622e",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "6ca20a30cf77ebfd",
        "influxdb": "c13ec768bcc1f442",
        "name": "Amzn basics AA battery",
        "measurement": "AAbatteries",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1130,
        "y": 5100,
        "wires": []
    },
    {
        "id": "5ffc50f2ed65e098",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "g": "6ca20a30cf77ebfd",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 5080,
        "wires": []
    },
    {
        "id": "83eabbe446eff77f",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "bda21744f6498753",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 5220,
        "wires": [
            [
                "7e89821a74d8fe8c",
                "ee6eb461e7906a3f",
                "5a83d1c969471d14"
            ]
        ]
    },
    {
        "id": "ee6eb461e7906a3f",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "bda21744f6498753",
        "name": "Price compare",
        "func": "if (msg.payload.price < 140 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 5220,
        "wires": [
            [
                "0956ec411c89500e"
            ]
        ]
    },
    {
        "id": "4527340724b3b783",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "bda21744f6498753",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 5220,
        "wires": [
            [
                "83eabbe446eff77f"
            ]
        ]
    },
    {
        "id": "7e89821a74d8fe8c",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "bda21744f6498753",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 968,
        "y": 5269,
        "wires": [
            [
                "8056f33e1110ef9b"
            ]
        ]
    },
    {
        "id": "8056f33e1110ef9b",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "bda21744f6498753",
        "influxdb": "c13ec768bcc1f442",
        "name": "AAA battery",
        "measurement": "AAAbattery",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1110,
        "y": 5340,
        "wires": []
    },
    {
        "id": "5a83d1c969471d14",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "g": "bda21744f6498753",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 5320,
        "wires": []
    },
    {
        "id": "ab6f9a360f37a721",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "d": true,
        "g": "e5152208272e57e7",
        "name": "Hourly Cron Wipro ns9400",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B095SWYF6M",
                "expressionType": "cron",
                "expression": "0 04 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "02180fc709680ddb",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "19017f80fe8eed6e",
        "name": "Hourly Cron himalaya neem",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B07XS46Q73",
                "expressionType": "cron",
                "expression": "0 09 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 240,
        "y": 2540,
        "wires": [
            [
                "288eb5b522997d37"
            ]
        ]
    },
    {
        "id": "1fc895d392ad6c9b",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "15bd4c5881ea193d",
        "name": "Hourly Cron nivea cream blue",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B07VKM2HR5",
                "expressionType": "cron",
                "expression": "0 21 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 250,
        "y": 2740,
        "wires": [
            [
                "0e0f1c44b2b6dd57"
            ]
        ]
    },
    {
        "id": "1d4de573ce597cc8",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "969e91d0.12682",
        "name": "Motul Xcess 8100",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B071P6NVB7",
                "expressionType": "cron",
                "expression": "0 19 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 150,
        "y": 760,
        "wires": [
            [
                "7212dbeaa8a94df6"
            ]
        ]
    },
    {
        "id": "c71c430e29551379",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "c5f1046ee557c975",
        "name": "Amznbasics 24cm pan",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B07CWC6CB6",
                "expressionType": "cron",
                "expression": "0 33 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 160,
        "y": 2960,
        "wires": [
            [
                "31e521d2d08e01e0"
            ]
        ]
    },
    {
        "id": "3653e424e208c0bd",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "974c830c450e17d7",
        "name": "amazon knives",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B01B3GARVG",
                "expressionType": "cron",
                "expression": "0 39 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 160,
        "y": 3140,
        "wires": [
            [
                "e91ed949932f5d0d"
            ]
        ]
    },
    {
        "id": "ccaf6e399eadf531",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "c7139aaff85b5fba",
        "name": "Loreal 1lt shampoo",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B08CSHBPD5",
                "expressionType": "cron",
                "expression": "0 42 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 190,
        "y": 3480,
        "wires": [
            [
                "34a771e9252d1933"
            ]
        ]
    },
    {
        "id": "cc6dae17a7d6acae",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "d120ad6f3aadb503",
        "name": "Amazon wok",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B07CWD6JFP",
                "expressionType": "cron",
                "expression": "0 33 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 210,
        "y": 3720,
        "wires": [
            [
                "6c57a264e11443f4"
            ]
        ]
    },
    {
        "id": "c86fce5435892682",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "2eb8719b39ddd0c0",
        "name": "Amazon torque wrench",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B07SV45HRY",
                "expressionType": "cron",
                "expression": "0 39 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 210,
        "y": 4040,
        "wires": [
            [
                "9448b7a1698b7d6c"
            ]
        ]
    },
    {
        "id": "5558e8607e20321a",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "e83a1cb9517a0cc7",
        "name": "AB induction 1900W",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B07YCCX789",
                "expressionType": "cron",
                "expression": "0 25 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 4300,
        "wires": [
            [
                "9e989feccce47a63"
            ]
        ]
    },
    {
        "id": "619b51ec07b7e88d",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "6ca20a30cf77ebfd",
        "name": "AmznbasicsAA",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B00O869KJE",
                "expressionType": "cron",
                "expression": "0 25 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 4980,
        "wires": [
            [
                "594f932fdfde82a7"
            ]
        ]
    },
    {
        "id": "b72ba9660af084e8",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "bda21744f6498753",
        "name": "Amzn basics AAA ",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B00O869QUC",
                "expressionType": "cron",
                "expression": "0 25 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 210,
        "y": 5220,
        "wires": [
            [
                "3ecb2674199ebf95"
            ]
        ]
    },
    {
        "id": "d24bd639e1990f66",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "2bb1f5b7b32a4709",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 360,
        "y": 60,
        "wires": [
            [
                "3d19f53128b8286f"
            ]
        ]
    },
    {
        "id": "8bcf78f34a03c2ee",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "g": "2bb1f5b7b32a4709",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 160,
        "wires": []
    },
    {
        "id": "d21aec6cfe859b6a",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "25bccfb620fd68fd",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 380,
        "y": 300,
        "wires": [
            [
                "52860de41a302f74"
            ]
        ]
    },
    {
        "id": "3529972e3960826f",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "ba35aaa0d8db98fb",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 400,
        "y": 520,
        "wires": [
            [
                "392c04efb19a273e"
            ]
        ]
    },
    {
        "id": "7212dbeaa8a94df6",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "969e91d0.12682",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 380,
        "y": 740,
        "wires": [
            [
                "998521a3.d3759"
            ]
        ]
    },
    {
        "id": "6587cc5bb60d2489",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "55a03d92dab54f02",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "5fbea85af6cd4510"
            ]
        ]
    },
    {
        "id": "e12b52dbe1d429f8",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "9d89888844cf6478",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 400,
        "y": 1340,
        "wires": [
            [
                "3638372b514e2d36"
            ]
        ]
    },
    {
        "id": "2a5208cb63f95bd8",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "7bdac3a653878839",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 420,
        "y": 1940,
        "wires": [
            [
                "cab3937fc1996d63"
            ]
        ]
    },
    {
        "id": "288eb5b522997d37",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "19017f80fe8eed6e",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 480,
        "y": 2540,
        "wires": [
            [
                "d6d13a02640c4c01"
            ]
        ]
    },
    {
        "id": "0e0f1c44b2b6dd57",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "15bd4c5881ea193d",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 480,
        "y": 2740,
        "wires": [
            [
                "5b3fc6b2abc132a3"
            ]
        ]
    },
    {
        "id": "31e521d2d08e01e0",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "c5f1046ee557c975",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 400,
        "y": 2960,
        "wires": [
            [
                "8d559a0afff77df5"
            ]
        ]
    },
    {
        "id": "34a771e9252d1933",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "c7139aaff85b5fba",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 420,
        "y": 3480,
        "wires": [
            [
                "805d4f73eee1d589"
            ]
        ]
    },
    {
        "id": "6c57a264e11443f4",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "d120ad6f3aadb503",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 440,
        "y": 3720,
        "wires": [
            [
                "aefb477cfa9b0773"
            ]
        ]
    },
    {
        "id": "9448b7a1698b7d6c",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "2eb8719b39ddd0c0",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 460,
        "y": 4040,
        "wires": [
            [
                "c1aefb88058b842a"
            ]
        ]
    },
    {
        "id": "9e989feccce47a63",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "e83a1cb9517a0cc7",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 420,
        "y": 4320,
        "wires": [
            [
                "a06ac11fe38921e5"
            ]
        ]
    },
    {
        "id": "594f932fdfde82a7",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "6ca20a30cf77ebfd",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 460,
        "y": 4980,
        "wires": [
            [
                "228f03e94449e553"
            ]
        ]
    },
    {
        "id": "3ecb2674199ebf95",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "bda21744f6498753",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 460,
        "y": 5220,
        "wires": [
            [
                "4527340724b3b783"
            ]
        ]
    },
    {
        "id": "271a2b4e4079eb3a",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "2bb1f5b7b32a4709",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1090,
        "y": 60,
        "wires": []
    },
    {
        "id": "1dd9c8e102272d63",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "25bccfb620fd68fd",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1090,
        "y": 320,
        "wires": []
    },
    {
        "id": "1fc34a3704bdde8e",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "ba35aaa0d8db98fb",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1110,
        "y": 540,
        "wires": []
    },
    {
        "id": "9823aaa869d43745",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "969e91d0.12682",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1070,
        "y": 720,
        "wires": []
    },
    {
        "id": "1d1e07fe5d686f58",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "1d9dc60a.89eaea",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1170,
        "y": 880,
        "wires": []
    },
    {
        "id": "52998d11f676e2aa",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "55a03d92dab54f02",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1090,
        "y": 1120,
        "wires": []
    },
    {
        "id": "7b65f75bb150341e",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "9d89888844cf6478",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1130,
        "y": 1320,
        "wires": []
    },
    {
        "id": "fa062b7a66b9be49",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "e79477378724c857",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1110,
        "y": 1560,
        "wires": []
    },
    {
        "id": "a8ac6089a7def170",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "8daadbffb3b253b3",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1210,
        "y": 1760,
        "wires": []
    },
    {
        "id": "70c6723d2ff013ff",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "7bdac3a653878839",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1190,
        "y": 1960,
        "wires": []
    },
    {
        "id": "8f62b7dd1758fc0e",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "e5152208272e57e7",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1170,
        "y": 2300,
        "wires": []
    },
    {
        "id": "df5ce71067c30168",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "19017f80fe8eed6e",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1230,
        "y": 2560,
        "wires": []
    },
    {
        "id": "00ea7cecda3cd0ab",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "15bd4c5881ea193d",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1230,
        "y": 2760,
        "wires": []
    },
    {
        "id": "97774660a766f623",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "c5f1046ee557c975",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1150,
        "y": 2980,
        "wires": []
    },
    {
        "id": "0e8d4dd4f12c93c1",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "974c830c450e17d7",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1230,
        "y": 3160,
        "wires": []
    },
    {
        "id": "1d133d2e63b1732d",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "c7139aaff85b5fba",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1190,
        "y": 3500,
        "wires": []
    },
    {
        "id": "71254e4548a1d5fb",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "d120ad6f3aadb503",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1230,
        "y": 3760,
        "wires": []
    },
    {
        "id": "08808f61ba3666fd",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "2eb8719b39ddd0c0",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1210,
        "y": 4080,
        "wires": []
    },
    {
        "id": "a2e3764f6f82e574",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "e83a1cb9517a0cc7",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1190,
        "y": 4340,
        "wires": []
    },
    {
        "id": "bd1cd5b0636d55e2",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "6ca20a30cf77ebfd",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1230,
        "y": 5020,
        "wires": []
    },
    {
        "id": "0956ec411c89500e",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "bda21744f6498753",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1190,
        "y": 5240,
        "wires": []
    },
    {
        "id": "cb7589feec8acaf2",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "g": "25bccfb620fd68fd",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 400,
        "wires": []
    },
    {
        "id": "1171911afaea9088",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "e79477378724c857",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 440,
        "y": 1560,
        "wires": [
            [
                "9f25a507d1ebcec2"
            ]
        ]
    },
    {
        "id": "e91ed949932f5d0d",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "974c830c450e17d7",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 380,
        "y": 3160,
        "wires": [
            [
                "acea76d72af8cb29"
            ]
        ]
    },
    {
        "id": "94a1cba28292b35a",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "8daadbffb3b253b3",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 380,
        "y": 1760,
        "wires": [
            [
                "f598d14124433188"
            ]
        ]
    },
    {
        "id": "2d0c8c0159b5e483",
        "type": "json",
        "z": "704041ab.e9cd3",
        "g": "b8cb59fd77bcbf31",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 790,
        "y": 4560,
        "wires": [
            [
                "672c8591cfc02890",
                "913a44daa1034e2e"
            ]
        ]
    },
    {
        "id": "913a44daa1034e2e",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "b8cb59fd77bcbf31",
        "name": "Price compare",
        "func": "if (msg.payload.price < 1650 && msg.payload.price > 500 ) {\n//if (msg.payload == \"yahoo\") {\n    var pld = JSON.stringify(msg.payload)\n    msg.payload = {}\n    msg.payload.chatId = -494640206\n    msg.payload.type = \"message\"\n    msg.payload.content = pld \n    return msg; } //[{payload: msg.payload}];}\nelse \n        return null;\n\n//return [{payload: msg.payload.price}];\n\n//return msg;\n\n// --------------------//\n\n//     return [{payload: msg.payload}]\n//else\n  //  return [{payload: \"none\"}]\n    \n//function deliverpayload() {\n//var pld = \"{msg.payload}\"\n//return [{payload: msg.payload}];\n//msg.payload = {}\n//msg.payload.chatId = 850731343\n//msg.payload.type = \"message\"\n//msg.payload.content = \"{pld}\"\n//return msg;\n//}\n\n//deliverpayload();",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 4560,
        "wires": [
            [
                "2a665c63c17097d8"
            ]
        ]
    },
    {
        "id": "950b145f153c4140",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "b8cb59fd77bcbf31",
        "name": "Filter None",
        "func": "if (msg.payload == \"None\") \n    return null;\nelse \n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 4560,
        "wires": [
            [
                "2d0c8c0159b5e483"
            ]
        ]
    },
    {
        "id": "672c8591cfc02890",
        "type": "function",
        "z": "704041ab.e9cd3",
        "g": "b8cb59fd77bcbf31",
        "name": "",
        "func": "    // var price = msg.payload.price\n    msg.payload = msg.payload.price\n    // msg.payload.measurement = \"Price\"\n    // msg.payload.fields = ({ \"m21\" : price })\n    return msg;  //[{payload: msg.payload}];}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 948,
        "y": 4609,
        "wires": [
            [
                "3d4691eadb7677cc"
            ]
        ]
    },
    {
        "id": "c3c3c5bc07c9818e",
        "type": "cronplus",
        "z": "704041ab.e9cd3",
        "g": "b8cb59fd77bcbf31",
        "name": "AB induction 1600W",
        "outputField": "payload",
        "timeZone": "",
        "storeName": "",
        "commandResponseMsgOutput": "output1",
        "defaultLocation": "",
        "defaultLocationType": "default",
        "outputs": 1,
        "options": [
            {
                "name": "Hourly",
                "topic": "Hourly",
                "payloadType": "str",
                "payload": "https://www.amazon.in/dp/B07YCBSCYB",
                "expressionType": "cron",
                "expression": "0 25 * * * * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 200,
        "y": 4560,
        "wires": [
            [
                "fd012b207d083414"
            ]
        ]
    },
    {
        "id": "3d4691eadb7677cc",
        "type": "influxdb out",
        "z": "704041ab.e9cd3",
        "g": "b8cb59fd77bcbf31",
        "influxdb": "c13ec768bcc1f442",
        "name": "ABinduc1600",
        "measurement": "ABinduc1600",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "matrix",
        "bucket": "amzn_nodered",
        "x": 1090,
        "y": 4680,
        "wires": []
    },
    {
        "id": "6dbc9e377d373c2d",
        "type": "debug",
        "z": "704041ab.e9cd3",
        "g": "b8cb59fd77bcbf31",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 4660,
        "wires": []
    },
    {
        "id": "fd012b207d083414",
        "type": "pythonshell in",
        "z": "704041ab.e9cd3",
        "g": "b8cb59fd77bcbf31",
        "name": "scraper",
        "pyfile": "/home/pi/node-red/scraper.py",
        "virtualenv": "",
        "continuous": false,
        "stdInData": false,
        "x": 420,
        "y": 4580,
        "wires": [
            [
                "950b145f153c4140"
            ]
        ]
    },
    {
        "id": "2a665c63c17097d8",
        "type": "mqtt out",
        "z": "704041ab.e9cd3",
        "g": "b8cb59fd77bcbf31",
        "name": "amznbot2 mqtt out",
        "topic": "amznbot2",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7e51be116b0c32bd",
        "x": 1190,
        "y": 4600,
        "wires": []
    }
]